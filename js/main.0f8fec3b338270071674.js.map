{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./demo/src/app/components/shared/api-docs/api-docs.model.ts","webpack:///./src/toggle.ts","webpack:///./demo/src/app/components/toggle/demos/index.ts","webpack:///./demo/src/app/components/toggle/toggle.component.ts","webpack:///./demo/src/app/components/toggle/index.ts","webpack:///./demo/src/app/components/index.ts","webpack:///./demo/src/app/shared/side-nav/side-nav.component.ts","webpack:///./demo/src/app/shared/component-wrapper/component-wrapper.component.ts","webpack:///./demo/src/app/getting-started/index.ts","webpack:///./demo/src/app/default/index.ts","webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./demo/src/app/components/shared/fragment/fragment.directive.ts","webpack:///./demo/src/app/components/shared/fragment/index.ts","webpack:///./demo/src/app/components/shared/api-docs/api-docs-config.component.html","webpack:///./demo/src/app/components/shared/api-docs/api-docs-config.component.ts","webpack:///./demo/src/app/components/shared/api-docs/api-docs-class.component.html","webpack:///./demo/src/app/components/shared/api-docs/api-docs-class.component.ts","webpack:///./demo/src/app/components/shared/api-docs/api-docs-badge.component.ts","webpack:///./demo/src/app/components/shared/api-docs/api-docs.component.html","webpack:///./demo/src/app/components/shared/api-docs/api-docs.component.ts","webpack:///./demo/src/app/components/shared/api-docs/index.ts","webpack:///./demo/src/app/components/shared/example-box/example-box.component.html","webpack:///./demo/src/app/components/shared/example-box/example-box.component.ts","webpack:///./demo/src/app/components/shared/example-box/index.ts","webpack:///./demo/src/app/components/shared/index.ts","webpack:///./src/index.ts","webpack:///./demo/src/app/components/toggle/demos/kitchen-sink/toggle-kitchen-sink.html?fc99","webpack:///./demo/src/app/components/toggle/demos/kitchen-sink/toggle-kitchen-sink.ts?e7f7","webpack:///./demo/src/app/components/toggle/demos/custom-label/toggle-custom-label.html?1578","webpack:///./demo/src/app/components/toggle/demos/custom-label/toggle-custom-label.ts?43a7","webpack:///./demo/src/app/components/toggle/demos/input/toggle-input.html?f635","webpack:///./demo/src/app/components/toggle/demos/input/toggle-input.ts?0782","webpack:///./demo/src/app/components/toggle/demos/basic/toggle-basic.html?dbce","webpack:///./demo/src/app/components/toggle/demos/basic/toggle-basic.ts?d96f","webpack:///./demo/src/app/components/toggle/demos/kitchen-sink/toggle-kitchen-sink.html","webpack:///./demo/src/app/components/toggle/demos/kitchen-sink/toggle-kitchen-sink.ts","webpack:///./demo/src/app/components/toggle/demos/custom-label/toggle-custom-label.html","webpack:///./demo/src/app/components/toggle/demos/custom-label/toggle-custom-label.ts","webpack:///./demo/src/app/components/toggle/demos/input/toggle-input.html","webpack:///./demo/src/app/components/toggle/demos/input/toggle-input.ts","webpack:///./demo/src/app/components/toggle/demos/basic/toggle-basic.html","webpack:///./demo/src/app/components/toggle/demos/basic/toggle-basic.ts","webpack:///./demo/src/app/app.routing.ts","webpack:///./demo/src/app/app.component.html","webpack:///./demo/src/app/shared/side-nav/side-nav.component.html","webpack:///./demo/src/app/shared/page-wrapper/page-wrapper.component.html","webpack:///./demo/src/app/shared/page-wrapper/page-wrapper.component.ts","webpack:///./demo/src/app/shared/component-wrapper/component-wrapper.component.html","webpack:///./demo/src/app/app.component.ts","webpack:///./demo/src/app/getting-started/getting-started.component.html","webpack:///./demo/src/app/getting-started/getting-started.component.ts","webpack:///./demo/src/app/default/default.component.html","webpack:///./demo/src/app/default/default.component.ts","webpack:///./demo/src/app/app.module.ts","webpack:///./demo/src/main.ts","webpack:///./demo/src/app/shared/analytics/analytics.ts","webpack:///./demo/src/app/shared/index.ts","webpack:///./demo/src/api-docs.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","3","exports","module","l","m","c","d","name","getter","o","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","p","jsonpArray","window","oldJsonpFunction","bind","slice","signature","method","args","map","arg","type","join","core_1","NgxToggleLabel","templateRef","elRef","this","__decorate","Input","Directive","selector","TemplateRef","ElementRef","NgxToggle","ngZone","onText","offText","onColor","offColor","size","disabled","valueChange","EventEmitter","width","handleWidth","_animate","_innerAnimate","_innerState","_innerWidth","_dragStart","_dragEnd","_initialized","_hidden","setState","ngAfterViewInit","calculateWidth","ngAfterViewChecked","hidden","nativeElement","offsetParent","ngAfterContentInit","onElement","labelElements","find","item","forLabel","toLowerCase","offElement","onLabel","offLabel","ngOnChanges","changes","btnClasses","ngx-toggle-lg","ngx-toggle-sm","btn-lg","btn-sm","ngx-toggled-on","innerState","ngx-toggled-off","ngx-toggle-indeterminate","indeterminate","ngx-toggle-animate","animate","ngx-toggle-disabled","activeClass","inactiveClass","handleClass","classes","margin","handleClick","onTouchStart","event","onDragStart","onMouseDown","onTouchMove","onDragMove","onMouseMove","onTouchEnd","onDragEnd","onMouseUp","onMouseLeave","onKeyDown","console","log","key","preventDefault","stopImmediatePropagation","target","handle$","stopPropagation","pageX","touches","parseInt","container$","style","marginLeft","difference","Number","clearDragEnd","disableAnimation","_this","setTimeout","on$","off$","Math","max","offsetWidth","run","emit","handleElement","containerElement","Output","ViewChild","ContentChildren","QueryList","HostListener","KeyboardEvent","Component","template","styles","preserveWhitespaces","NgZone","toggle_basic_1","toggle_input_1","toggle_custom_label_1","toggle_kitchen_sink_1","DEMO_DIRECTIVES","NgxdToggleBasic","NgxdToggleInput","NgxdToggleCustomLabel","NgxdToggleKitchenSink","DEMO_SNIPPETS","basic","code","markup","input","custom-label","kitchen-sink","demos_1","NgxdToggle","snippets","__export","ng_bootstrap_1","ngx_toggle_1","shared_1","shared_2","toggle_component_1","NgxdToggleModule","NgModule","imports","NgbdSharedModule","NgbdComponentsSharedModule","NgxToggleModule","NgbModule","declarations","concat","toggle_1","NgxdDemoModule","router_1","componentsList","route","SideNavComponent","router","components","isActive","currentRoute","createUrlTree","String","Router","DEFAULT_TAB","VALID_TABS","ComponentWrapper","fileTypes","params","subscribe","tab","indexOf","activeTab","navigate","relativeTo","document","body","scrollIntoView","tabChange","nextId","ActivatedRoute","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","keys","id","NgbdFragment","host","[class.title-fragment]","[attr.id]","api_docs_1","analytics_1","CONFIG_SUFFIX_LENGTH","NgbdApiDocsConfig","_analytics","typeName","apiDocs","default","directiveName","trackSourceClick","trackEvent","className","changeDetection","ChangeDetectionStrategy","OnPush","Analytics","api_docs_model_1","NgbdApiDocsClass","methodSignature","BADGES","Service","Configuration","Class","Interface","NgbdApiDocsBadge","text","badgeClass","NgbdApiDocs","configServiceName","configApiDocs","_configProperties","inputs","forEach","_findInputConfigProperty","defaultInputValue","configProperty","defaultValue","hasConfigProperty","properties","filter","prop","ExampleBoxComponent","example_box_1","fragment_1","common_1","EXPORT_DIRECTIVES","CommonModule","model","colors","setOnColor","color","setOffColor","default_1","getting_started_1","components_1","componentRoutes","path","children","pathMatch","redirectTo","component","routes","DefaultComponent","GettingStarted","routing","RouterModule","forRoot","useHash","PageWrapper","AppComponent","navbarCollapsed","events","NavigationEnd","fragment","parseUrl","url","element","querySelector","ngOnInit","trackPageViews","version","platform_browser_1","app_component_1","app_routing_1","NgxdModule","BrowserModule","bootstrap","platform_browser_dynamic_1","app_module_1","enableProdMode","platformBrowserDynamic","bootstrapModule","filter_1","_location","_router","_enabled","location","href","ga","hitType","page","action","category","eventCategory","eventAction","Injectable","Location","forms_1","http_1","component_wrapper_component_1","page_wrapper_component_1","side_nav_component_1","side_nav_component_2","FormsModule","ReactiveFormsModule","HttpClientModule","providers","fileName","description","outputs","methods"],"mappings":"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","file":"js/main.0f8fec3b338270071674.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t3: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([275,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export interface ClassDesc {\n  type: string;\n  fileName: string;\n  className: string;\n  description: string;\n  properties: PropertyDesc[];\n  methods: MethodDesc[];\n}\n\nexport interface DirectiveDesc extends ClassDesc {\n  selector: string;\n  exportAs?: string;\n  inputs: InputDesc[];\n  outputs: OutputDesc[];\n}\n\nexport interface PropertyDesc {\n  name: string;\n  type: string;\n  description: string;\n  defaultValue?: string;\n}\n\nexport interface MethodDesc {\n  name: string;\n  description: string;\n  args: ArgumentDesc[];\n  returnType: string;\n}\n\nexport interface ArgumentDesc {\n  name: string;\n  type: string;\n}\n\nexport interface InputDesc extends PropertyDesc {}\n\nexport interface OutputDesc extends PropertyDesc {}\n\nexport function signature(method: MethodDesc): string {\n  const args = method['args'].map(arg => `${arg.name}: ${arg.type}`).join(', ');\n  return `${method.name}(${args})`;\n}\n","import {\n  AfterContentInit,\n  AfterViewChecked,\n  AfterViewInit,\n  Component,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  NgZone,\n  OnChanges,\n  Output,\n  QueryList,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\n\n/**\n * The NgxToggleLabel directive allows you to customize the label for the \"On\" and \"Off\" states,\n * allowing for more robust and complex displays.\n * This directive must be used in conjunction with a ng-template.\n */\n@Directive({selector: 'ng-template[ngxToggleLabel]'})\nexport class NgxToggleLabel {\n  /**\n   * Determines which state the label will be used.\n   */\n  @Input() forLabel: 'on'|'off';\n\n  constructor(public templateRef: TemplateRef<any>, private elRef: ElementRef) {}\n\n  get element(): ElementRef {\n    return this.elRef;\n  }\n}\n\n\n/**\n * The NgxToggle directive allows for standalone or checkbox-enabled switch toggling via a UI element.\n * The toggle is styled using Bootstrap v4+ classes.\n */\n@Component({\n  selector: 'ngx-toggle',\n  template: `\n    <div class=\"ngx-toggle-wrapper btn\" [ngClass]=\"btnClasses\" [style.width]=\"(width + handleWidth) + 'px'\">\n        <div #container class=\"ngx-toggle-container\"\n             [style.width]=\"((width * 2) + handleWidth) + 'px'\"\n             [style.margin-left]=\"marginLeft\"\n        >\n            <span #on class=\"ngx-toggle-on btn\" [ngClass]=\"onClasses\">\n                <ng-template [ngTemplateOutlet]=\"onLabel?.templateRef\"></ng-template>\n                <ng-container *ngIf=\"!onLabel\">{{onText}}</ng-container>\n            </span>\n            <span #handle class=\"ngx-toggle-handle btn\" [ngClass]=\"handleClass\">&nbsp;</span>\n            <span #off class=\"ngx-toggle-off btn\" [ngClass]=\"offClasses\">\n                <ng-template [ngTemplateOutlet]=\"offLabel?.templateRef\"></ng-template>\n                <ng-container *ngIf=\"!offLabel\">{{offText}}</ng-container>\n            </span>\n        </div>\n        <ng-content></ng-content>\n    </div>\n`,\n  styles: [\n    ':host {position: relative; display: inline-block;}', `.ngx-toggle-wrapper {\n        position: relative; display: flex!important;\n        direction: ltr; cursor: pointer; overflow: hidden; padding:0;\n        text-align: left; z-index: 0; user-select: none; vertical-align: middle;\n        transition: border-color 0.15s ease-in-out,box-shadow 0.15s ease-in-out; box-sizing: content-box;\n        }.ngx-toggle-wrapper.disabled,.ngx-toggle-wrapper.disabled .btn{cursor: default;}`,\n    '.ngx-toggle-wrapper input{position: absolute; z-index: -1; visibility: hidden; width: 1px; height: 1px;}',\n    `.ngx-toggle-container {\n            display: flex!important; align-items: stretch!important; top: 0; border-radius: 0; transform: translateZ(0);\n        }`,\n    '.ngx-toggle-wrapper.ngx-toggle-animate .ngx-toggle-container {transition: margin-left 0.5s;}',\n    `.ngx-toggle-on,.ngx-toggle-off {\n            display: flex!important; align-items: center!important; text-align: center; z-index: 1; border-radius: 0;\n        }`,\n    `.ngx-toggle-on,.ngx-toggle-off,.ngx-toggle-handle {\n            box-sizing: border-box;\n            cursor: pointer;\n            user-select: none;\n        }`,\n    `.ngx-toggle-handle {\n            text-align: center;\n            margin-top: -1px;\n            margin-bottom: -1px;\n            z-index: 100;\n            width: 1em;\n            padding-left: 0;\n            padding-right: 0;\n            align-self: stretch !important;\n        }`\n  ],\n  preserveWhitespaces: false\n})\nexport class NgxToggle implements AfterViewInit, AfterContentInit, AfterViewChecked, OnChanges {\n  /**\n   * Display text when toggled in the \"On\" position\n   * @type {string}\n   */\n  @Input() onText: string = 'On';\n  /**\n   * Display text when toggled in the \"Off\" position\n   * @type {string}\n   */\n  @Input() offText: string = 'Off';\n  /**\n   * Bootstrap color scheme when toggled in the \"On\" position (i.e. \"primary\" translates to \"btn-primary\")\n   * @type {string}\n   */\n  @Input() onColor: string = 'primary';\n  /**\n   * Bootstrap color scheme when toggled in the \"Off\" position (i.e. \"primary\" translates to \"btn-primary\")\n   * @type {string}\n   */\n  @Input() offColor: string = 'secondary';\n  /**\n   * Button size to display the toggle\n   * @type {string}\n   */\n  @Input() size: 'sm'|'lg'|'' = '';\n  /**\n   * Whether the toggle is disabled or not\n   * @type {boolean}\n   */\n  @Input() disabled: boolean = false;\n\n  /**\n   * @param {boolean} value\n   */\n  @Input()\n  set value(value: boolean) {\n    this.setState(value);\n  }\n  get value(): boolean {\n    return this._innerState;\n  }\n\n  /**\n   * An event fired when the user causes a change.\n   * The payload of the event is the currently selected value.\n   * @type {EventEmitter<boolean>}\n   */\n  @Output() valueChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  width: number = 0;\n  handleWidth: number = 0;\n\n  @ViewChild('container') containerElement: ElementRef;\n  @ViewChild('on') onElement: ElementRef;\n  @ViewChild('off') offElement: ElementRef;\n  @ViewChild('handle') handleElement: ElementRef;\n  @ContentChildren(NgxToggleLabel) labelElements: QueryList<NgxToggleLabel>;\n  onLabel: NgxToggleLabel;\n  offLabel: NgxToggleLabel;\n\n  private _animate: boolean = true;\n  private _innerAnimate: boolean = true;\n  private _innerState: boolean = false;\n  private _innerWidth: string|number = 'auto';\n\n  private _dragStart: any = null;\n  private _dragEnd: any = null;\n  private _initialized: boolean = false;\n  private _hidden: boolean = false;\n\n  constructor(private ngZone: NgZone, private elRef: ElementRef) {}\n\n  ngAfterViewInit(): void {\n    this.calculateWidth();\n    this._initialized = true;\n  }\n\n  ngAfterViewChecked(): void {\n    let hidden = this.elRef.nativeElement.offsetParent === null;\n    if (this._initialized && this._hidden && !hidden) {\n      this.calculateWidth();\n    }\n    this._hidden = hidden;\n  }\n\n  ngAfterContentInit(): void {\n    let onElement: NgxToggleLabel =\n        this.labelElements.find((item: NgxToggleLabel) => item.forLabel.toLowerCase() === 'on');\n    let offElement: NgxToggleLabel =\n        this.labelElements.find((item: NgxToggleLabel) => item.forLabel.toLowerCase() === 'off');\n\n    if (onElement) {\n      this.onLabel = onElement;\n    }\n    if (offElement) {\n      this.offLabel = offElement;\n    }\n    if (onElement || offElement) {\n      this.calculateWidth(true);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['onText'] || changes['offText'] || changes['size']) {\n      this.calculateWidth(this._initialized);\n    }\n  }\n\n  get btnClasses(): any {\n    let btnClasses = {\n      'disabled': this.disabled,\n      'ngx-toggle-lg': this.size === 'lg',\n      'ngx-toggle-sm': this.size === 'sm',\n      'btn-lg': this.size === 'lg',\n      'btn-sm': this.size === 'sm',\n      'ngx-toggled-on': this.innerState === true,\n      'ngx-toggled-off': this.innerState === false,\n      'ngx-toggle-indeterminate': this.indeterminate,\n      'ngx-toggle-animate': this.animate,\n      'ngx-toggle-disabled': this.disabled\n    };\n    btnClasses[this.activeClass] = this.value;\n    btnClasses[this.inactiveClass] = !this.value;\n    if (this.activeClass === this.inactiveClass) {\n      btnClasses[this.activeClass] = true;\n    }\n\n    return btnClasses;\n  }\n\n  get handleClass(): any {\n    let handleClass = 'btn-light';\n    let classes = {'disabled': this.disabled, 'btn-lg': this.size === 'lg', 'btn-sm': this.size === 'sm'};\n    if ((this.value && this.onColor === 'light') || (!this.value && this.offColor === 'light')) {\n      handleClass = 'btn-dark';\n    }\n    classes[handleClass] = true;\n\n    return classes;\n  }\n\n  get onClasses(): any {\n    let classes = {'disabled': this.disabled, 'btn-lg': this.size === 'lg', 'btn-sm': this.size === 'sm'};\n    classes['btn-' + this.onColor] = true;\n\n    return classes;\n  }\n\n  get offClasses(): any {\n    let classes = {'disabled': this.disabled, 'btn-lg': this.size === 'lg', 'btn-sm': this.size === 'sm'};\n    classes['btn-' + this.offColor] = true;\n\n    return classes;\n  }\n\n  get indeterminate(): boolean {\n    return this._innerState === null || typeof this._innerState === 'undefined';\n  }\n\n  get activeClass(): string {\n    return 'btn-' + this.onColor;\n  }\n\n  get inactiveClass(): string {\n    return 'btn-' + this.offColor;\n  }\n\n  get innerState(): boolean {\n    return this._innerState;\n  }\n\n  get animate(): boolean {\n    return this._animate;\n  }\n\n  get marginLeft(): string {\n    let margin = 0;\n    if (this.indeterminate || this._innerState === null || typeof this._innerState === 'undefined') {\n      margin = -(this.width / 2);\n    } else if (this._dragEnd) {\n      margin = this._dragEnd;\n    } else if (!this._innerState) {\n      margin = -this.width;\n    }\n\n    return margin + 'px';\n  }\n\n  @HostListener('click')\n  handleClick() {\n    if (!this.disabled && !this._dragEnd) {\n      this.setState(!this._innerState);\n    } else if (this._dragEnd) {\n      this._dragEnd = null;\n    }\n  }\n\n  @HostListener('touchstart', ['$event'])\n  onTouchStart(event: any) {\n    this.onDragStart(event);\n  }\n\n  @HostListener('mousedown', ['$event'])\n  onMouseDown(event: any) {\n    this.onDragStart(event);\n  }\n\n  @HostListener('touchmove', ['$event'])\n  onTouchMove(event: any) {\n    this.onDragMove(event);\n  }\n\n  @HostListener('mousemove', ['$event'])\n  onMouseMove(event: any) {\n    this.onDragMove(event);\n  }\n\n  @HostListener('touchend', ['$event'])\n  onTouchEnd(event: any) {\n    this.onDragEnd(event, true);\n  }\n\n  @HostListener('mouseup', ['$event'])\n  onMouseUp(event: any) {\n    this.onDragEnd(event);\n  }\n\n  @HostListener('mouseleave', ['$event'])\n  onMouseLeave(event: any) {\n    this.onDragEnd(event, true);\n  }\n\n  @HostListener('keydown', ['$event'])\n  onKeyDown(event: KeyboardEvent) {\n    console.log(event);\n    if (!event.key || this.disabled) {\n      return;\n    }\n    switch (event.key) {\n      case 'Left':\n        event.preventDefault();\n        event.stopImmediatePropagation();\n        this.setState(false);\n        break;\n      case 'Right':\n        event.preventDefault();\n        event.stopImmediatePropagation();\n        this.setState(true);\n        break;\n    }\n  }\n\n  private onDragStart(event: any): void {\n    if (event.target === this.handle$) {\n      if (this._dragStart || this.disabled) {\n        return;\n      }\n      event.preventDefault();\n      event.stopPropagation();\n      this._dragStart = (event.pageX || event.touches[0].pageX) - parseInt(this.container$.style.marginLeft, 10);\n      if (this._animate) {\n        this._animate = !this._animate;\n      }\n    }\n  }\n\n  private onDragMove(event: any): void {\n    if (this._dragStart) {\n      event.preventDefault();\n      let difference = (event.pageX || event.touches[0].pageX) - this._dragStart;\n      if (difference < -(Number(this.width)) || difference > 0) {\n        return;\n      }\n      this._dragEnd = difference;\n    }\n  }\n\n  private onDragEnd(event: any, clearDragEnd: boolean = false): void {\n    if (this._dragStart) {\n      event.preventDefault();\n      event.stopPropagation();\n      if (this._dragEnd) {\n        this.setState(this._dragEnd > -(Number(this.width) / 2));\n      }\n      this._dragStart = null;\n      if (clearDragEnd) {\n        this._dragEnd = null;\n      }\n      if (this._innerAnimate) {\n        this._animate = true;\n      }\n    }\n  }\n\n  private calculateWidth(disableAnimation: boolean = false) {\n    if (disableAnimation && this._innerAnimate) {\n      this._animate = false;\n    }\n\n    setTimeout(() => {\n      this.on$.style.width = 'auto';\n      this.off$.style.width = 'auto';\n\n      let width = this._innerWidth;\n      if (this._innerWidth === 'auto') {\n        width = Math.max(this.on$.offsetWidth, this.off$.offsetWidth);\n      }\n\n      this.handleWidth = this.handle$.offsetWidth;\n      this.width = Number(width);\n\n      this.ngZone.run(() => {\n        this.on$.style.width = this.width + 'px';\n        this.off$.style.width = this.width + 'px';\n        setTimeout(() => {\n          if (disableAnimation && this._innerAnimate) {\n            this._animate = true;\n          }\n        });\n      });\n    }, 10);\n  }\n\n  private setState(value: boolean) {\n    if (value !== this._innerState) {\n      this._innerState = value;\n      this.valueChange.emit(this._innerState);\n    }\n  }\n\n  private get on$(): HTMLElement {\n    return this.onElement.nativeElement;\n  }\n\n  private get off$(): HTMLElement {\n    return this.offElement.nativeElement;\n  }\n\n  private get handle$(): HTMLElement {\n    return this.handleElement.nativeElement;\n  }\n\n  private get container$(): HTMLElement {\n    return this.containerElement.nativeElement;\n  }\n}\n","import {NgxdToggleBasic} from './basic/toggle-basic';\nimport {NgxdToggleInput} from './input/toggle-input';\nimport {NgxdToggleCustomLabel} from './custom-label/toggle-custom-label';\nimport {NgxdToggleKitchenSink} from './kitchen-sink/toggle-kitchen-sink';\n\nexport const DEMO_DIRECTIVES = [NgxdToggleBasic, NgxdToggleInput, NgxdToggleCustomLabel, NgxdToggleKitchenSink];\n\nexport const DEMO_SNIPPETS = {\n  'basic': {\n    'code': require('!!prismjs-loader?lang=typescript!./basic/toggle-basic'),\n    'markup': require('!!prismjs-loader?lang=markup!./basic/toggle-basic.html')\n  },\n  'input': {\n    'code': require('!!prismjs-loader?lang=typescript!./input/toggle-input'),\n    'markup': require('!!prismjs-loader?lang=markup!./input/toggle-input.html')\n  },\n  'custom-label': {\n    'code': require('!!prismjs-loader?lang=typescript!./custom-label/toggle-custom-label'),\n    'markup': require('!!prismjs-loader?lang=markup!./custom-label/toggle-custom-label.html')\n  },\n  'kitchen-sink': {\n    'code': require('!!prismjs-loader?lang=typescript!./kitchen-sink/toggle-kitchen-sink'),\n    'markup': require('!!prismjs-loader?lang=markup!./kitchen-sink/toggle-kitchen-sink.html')\n  }\n};\n","import {Component} from '@angular/core';\nimport {DEMO_SNIPPETS} from './demos';\n\n@Component({\n  selector: 'ngxd-toggle',\n  template: `\n    <ngbd-component-wrapper component=\"Toggle\">\n      <ngbd-api-docs directive=\"NgxToggle\"></ngbd-api-docs>\n      <ngbd-api-docs directive=\"NgxToggleLabel\"></ngbd-api-docs>\n      <ngbd-example-box demoTitle=\"Basic\" [snippets]=\"snippets\" component=\"toggle\" demo=\"basic\">\n        <ngxd-toggle-basic></ngxd-toggle-basic>\n      </ngbd-example-box>\n      <ngbd-example-box demoTitle=\"Checkbox\" [snippets]=\"snippets\" component=\"toggle\" demo=\"input\">\n        <ngxd-toggle-input></ngxd-toggle-input>\n      </ngbd-example-box>\n      <ngbd-example-box demoTitle=\"Custom Label\" [snippets]=\"snippets\" component=\"toggle\" demo=\"custom-label\">\n        <ngxd-toggle-custom-label></ngxd-toggle-custom-label>\n      </ngbd-example-box>\n      <ngbd-example-box demoTitle=\"Everything... and the kitchen sink\" [snippets]=\"snippets\" component=\"toggle\" demo=\"kitchen-sink\">\n        <ngxd-toggle-kitchen-sink></ngxd-toggle-kitchen-sink>\n      </ngbd-example-box>\n    </ngbd-component-wrapper>\n  `\n})\nexport class NgxdToggle {\n  snippets = DEMO_SNIPPETS;\n}\n","\nexport * from './toggle.component';\n\nimport {NgModule} from '@angular/core';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\n\nimport {NgxToggleModule} from 'ngx-toggle';\nimport {NgbdSharedModule} from '../../shared';\nimport {NgbdComponentsSharedModule} from '../shared';\nimport {NgxdToggle} from './toggle.component';\nimport {DEMO_DIRECTIVES} from './demos';\n\n@NgModule({\n  imports: [NgbdSharedModule, NgbdComponentsSharedModule, NgxToggleModule, NgbModule],\n  exports: [NgxdToggle],\n  declarations: [NgxdToggle, ...DEMO_DIRECTIVES]\n})\nexport class NgxdToggleModule {}\n","export * from './toggle';\n\nimport {NgModule} from '@angular/core';\n\nimport {NgbdSharedModule} from '../shared';\nimport {NgxdToggleModule} from './toggle';\n\n@NgModule({\n  imports: [\n    NgbdSharedModule,\n    NgxdToggleModule\n  ],\n  exports: [\n    NgxdToggleModule\n  ]\n})\nexport class NgxdDemoModule {}\n","import { Component, Input } from '@angular/core';\nimport {Router} from '@angular/router';\n\nexport const componentsList = [\n    {\n      name: 'Toggle Switch',\n      route: 'toggle'\n    }\n];\n\n@Component({\n  selector: 'ngbd-side-nav',\n  template: require('./side-nav.component.html'),\n})\nexport class SideNavComponent {\n  @Input() activeTab: String;\n  components = componentsList;\n\n  constructor(private router: Router) {}\n\n  isActive(currentRoute: any[]): boolean {\n    return this.router.isActive(this.router.createUrlTree(currentRoute), true);\n  }\n}\n","import {Component, Input} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\n\nexport const DEFAULT_TAB = 'examples';\nconst VALID_TABS = [DEFAULT_TAB, 'api'];\n\n@Component({\n  selector: 'ngbd-component-wrapper',\n  template: require('./component-wrapper.component.html')\n})\nexport class ComponentWrapper {\n\n  @Input()\n  public component: string;\n\n  public activeTab: string;\n\n  public fileTypes = [\n    ['T', 'HTML template file', 'btn-secondary'],\n    ['C', 'Component typescript file', 'btn-info'],\n  ];\n\n  constructor(private route: ActivatedRoute, private router: Router) {\n    this.route.params.subscribe(params => {\n      const tab = params['tab'];\n      if (VALID_TABS.indexOf(tab) !== -1) {\n        this.activeTab = tab;\n      } else {\n        this.router.navigate(['..', DEFAULT_TAB], {relativeTo: this.route});\n      }\n      document.body.scrollIntoView();\n    });\n  }\n\n  tabChange(event) {\n    this.router.navigate(['..', event.nextId], {relativeTo: this.route});\n  }\n}\n","export * from './getting-started.component';\n","export * from './default.component';\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 144;","import { Directive, Input } from '@angular/core';\n\n@Directive({\n  selector: 'a[ngbdFragment]',\n  host: {\n    '[class.title-fragment]': 'true',\n    '[attr.id]': 'fragment'\n  }\n})\nexport class NgbdFragment {\n  @Input() fragment: string;\n}\n","export * from './fragment.directive';\n","module.exports = \"<div (click)=\\\"trackSourceClick()\\\" class=\\\"api-doc-component\\\">\\n  <h3>\\n    <a\\n      class=\\\"title-fragment\\\"\\n      [routerLink]=\\\"\\\"\\n      fragment=\\\"{{apiDocs.className}}\\\"\\n      ngbdFragment\\n      title=\\\"Anchor link to: {{apiDocs.className}}\\\"\\n    >\\n      <img src=\\\"img/link-symbol.svg\\\" alt=\\\"Anchor link to: {{apiDocs.className}}\\\"/>\\n    </a>\\n    {{apiDocs.className}}\\n    <a\\n      class=\\\"github-link\\\"\\n      href=\\\"https://github.com/ngx-toggle/ngx-toggle/tree/master/{{apiDocs.fileName}}\\\"\\n      target=\\\"_blank\\\"\\n      title=\\\"Link to Github: {{apiDocs.className}}\\\"\\n    >\\n      <img src=\\\"img/github.svg\\\" alt=\\\"Link to Github {{apiDocs.className}}\\\"/>\\n    </a>\\n  </h3>\\n  <ngbd-api-docs-badge type=\\\"Configuration\\\"></ngbd-api-docs-badge>\\n  <p class=\\\"lead\\\">{{apiDocs.description}}</p>\\n\\n  <ng-template [ngIf]=\\\"apiDocs.properties && apiDocs.properties.length\\\">\\n    <section>\\n      <h4>Properties</h4>\\n      <p>\\n        <ng-template ngFor let-property [ngForOf]=\\\"apiDocs.properties\\\">\\n          <code>{{ property.name }}</code>\\n        </ng-template>\\n        <i>&mdash; Documentation available in <a [routerLink]=\\\"\\\" fragment=\\\"{{directiveName}}\\\">{{ directiveName }}</a></i>\\n      </p>\\n    </section>\\n  </ng-template>\\n</div>\\n\\n\"","import {Component, ChangeDetectionStrategy, Input} from '@angular/core';\nimport docs from '../../../../api-docs';\nimport {ClassDesc} from './api-docs.model';\nimport {Analytics} from '../../../shared/analytics/analytics';\n\nconst CONFIG_SUFFIX_LENGTH = 'Config'.length;\n\n/**\n * Displays the API docs of a Config service. A Config service for a component Foo is named, by convention,\n * FooConfig, and only has properties, whose name matches with an input of the directive.\n * In order to avoid cluttering the demo pages, the only things displayed by this component\n * is the description of the Config service and the list of its properties, whose documentation and\n * default value is documented in the directive itself.\n */\n@Component({\n  selector: 'ngbd-api-docs-config',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: require('./api-docs-config.component.html')\n})\nexport class NgbdApiDocsConfig {\n  apiDocs: ClassDesc;\n  directiveName: string;\n\n  constructor(private _analytics: Analytics) {}\n\n  @Input() set type(typeName: string) {\n    this.apiDocs = docs[typeName];\n    this.directiveName = typeName.slice(0, -CONFIG_SUFFIX_LENGTH);\n  };\n\n  trackSourceClick() {\n    this._analytics.trackEvent('Source File View', this.apiDocs.className);\n  }\n}\n","module.exports = \"<div class=\\\"api-doc-component\\\">\\n  <h3>\\n    <a\\n      class=\\\"title-fragment\\\"\\n      [routerLink]=\\\"\\\"\\n      fragment=\\\"{{apiDocs.className}}\\\" ngbdFragment\\n      title=\\\"Anchor link to: {{apiDocs.className}}\\\"\\n    >\\n      <img src=\\\"img/link-symbol.svg\\\" alt=\\\"Anchor link to: {{apiDocs.className}}\\\"/>\\n    </a>\\n    {{apiDocs.className}}\\n    <a\\n      class=\\\"github-link\\\"\\n      (click)=\\\"trackSourceClick()\\\"\\n      href=\\\"https://github.com/ngx-toggle/ngx-toggle/tree/master/{{apiDocs.fileName}}\\\"\\n      target=\\\"_blank\\\"\\n      title=\\\"Link to Github: {{apiDocs.className}}\\\"\\n    >\\n      <img src=\\\"img/github.svg\\\" alt=\\\"Link to Github {{apiDocs.className}}\\\"/>\\n    </a>\\n  </h3>\\n  <ngbd-api-docs-badge [type]=\\\"apiDocs.type\\\"></ngbd-api-docs-badge>\\n  <p class=\\\"lead\\\">{{apiDocs.description}}</p>\\n\\n  <ng-template [ngIf]=\\\"apiDocs.properties && apiDocs.properties.length\\\">\\n    <section>\\n      <h4>Properties</h4>\\n      <table class=\\\"table table-sm\\\">\\n        <tbody>\\n        <tr *ngFor=\\\"let prop of apiDocs.properties\\\">\\n          <td class=\\\"label-cell\\\"><code>{{prop.name}}</code></td>\\n          <td class=\\\"content-cell\\\">\\n            <p>{{ prop.description }}</p>\\n            <div class=\\\"meta\\\">\\n              <div>\\n                <i>Type: </i><code>{{ prop.type }}</code>\\n              </div>\\n              <div *ngIf=\\\"prop.defaultValue\\\">\\n                <i>Default value: </i><code>{{prop.defaultValue || '-'}}</code>\\n              </div>\\n            </div>\\n          </td>\\n        </tr>\\n        </tbody>\\n      </table>\\n    </section>\\n  </ng-template>\\n\\n  <ng-template [ngIf]=\\\"apiDocs.methods && apiDocs.methods.length\\\">\\n    <section>\\n      <h4>Methods</h4>\\n      <table class=\\\"table table-sm\\\">\\n        <tbody>\\n          <tr *ngFor=\\\"let method of apiDocs.methods\\\">\\n            <td class=\\\"label-cell\\\"><code>{{method.name}}</code></td>\\n            <td class=\\\"content-cell\\\">\\n                <p>\\n                    <code>{{methodSignature(method)}}</code>\\n                    <small class=\\\"text-muted\\\" title=\\\"Return type\\\">=&gt; {{ method.returnType }}</small>\\n                </p>\\n                <p>{{ method.description }}</p>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </section>\\n  </ng-template>\\n</div>\\n\\n\"","import {Component, ChangeDetectionStrategy, Input} from '@angular/core';\nimport docs from '../../../../api-docs';\nimport {ClassDesc, MethodDesc, signature} from './api-docs.model';\nimport {Analytics} from '../../../shared/analytics/analytics';\n\n/**\n * Displays the API docs of a class, which is not a directive.\n *\n * For Config services, use NgbdApiDocsConfig instead.\n */\n@Component({\n  selector: 'ngbd-api-docs-class',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: require('./api-docs-class.component.html'),\n  styles: [`\n    .label-cell {\n      width: 25%;\n    }\n    .content-cell {\n      width: 75%;\n    }\n    `\n  ]\n})\nexport class NgbdApiDocsClass {\n  apiDocs: ClassDesc;\n\n  constructor(private _analytics: Analytics) {}\n\n  @Input() set type(typeName: string) {\n    this.apiDocs = docs[typeName];\n  };\n\n  methodSignature(method: MethodDesc): string { return signature(method); }\n\n  trackSourceClick() {\n    this._analytics.trackEvent('Source File View', this.apiDocs.className);\n  }\n}\n","import {ChangeDetectionStrategy, Component, Input} from '@angular/core';\n\nconst BADGES = {\n  'Directive': 'success',\n  'Component': 'success',\n  'Service': 'primary',\n  'Configuration': 'primary',\n  'Class': 'danger',\n  'Interface': 'danger'\n};\n\n@Component({\n  selector: 'ngbd-api-docs-badge',\n  template: `<h5><span class=\"badge\" [ngClass]=\"badgeClass\">{{text}}</span></h5>`,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgbdApiDocsBadge {\n\n  badgeClass;\n  text;\n\n  @Input()\n  set type(type: string) {\n    this.text = type;\n    this.badgeClass = `badge-${BADGES[type] || 'secondary'}`;\n  }\n}\n","module.exports = \"<div class=\\\"api-doc-component\\\">\\n  <h2 class=\\\"title\\\">\\n    <a\\n      [routerLink]=\\\"\\\"\\n      fragment=\\\"{{apiDocs.className}}\\\" ngbdFragment\\n      title=\\\"Anchor link to: {{apiDocs.className}}\\\"\\n    >\\n      <img src=\\\"img/link-symbol.svg\\\" alt=\\\"Anchor link to: {{apiDocs.className}}\\\"/>\\n    </a>\\n    <span>{{apiDocs.className}}</span>\\n    <a\\n      class=\\\"github-link\\\"\\n      (click)=\\\"trackSourceClick()\\\"\\n      href=\\\"https://github.com/ngx-toggle/ngx-toggle/tree/master/{{apiDocs.fileName}}\\\"\\n      target=\\\"_blank\\\"\\n      title=\\\"Link to Github: {{apiDocs.className}}\\\"\\n    >\\n      <img src=\\\"img/github.svg\\\" alt=\\\"Link to Github {{apiDocs.className}}\\\"/>\\n    </a>\\n  </h2>\\n  <ngbd-api-docs-badge [type]=\\\"apiDocs.type\\\"></ngbd-api-docs-badge>\\n  <p class=\\\"lead\\\">\\n    {{apiDocs.description}}\\n  </p>\\n\\n  <section>\\n    <h4>Selector <small><code>{{apiDocs.selector}}</code></small></h4>\\n    <h6 *ngIf=\\\"apiDocs.exportAs\\\">Exported as <small><code>{{apiDocs.exportAs}}</code></small></h6>\\n  </section>\\n\\n  <ng-template [ngIf]=\\\"apiDocs.inputs.length\\\">\\n    <section>\\n      <h4>Inputs</h4>\\n      <table class=\\\"table table-sm\\\">\\n        <tbody>\\n        <tr *ngFor=\\\"let input of apiDocs.inputs\\\">\\n          <td class=\\\"label-cell\\\"><code>{{input.name}}</code></td>\\n          <td class=\\\"content-cell\\\">\\n            <p class=\\\"description\\\">{{ input.description }}</p>\\n            <div class=\\\"meta\\\">\\n              <div>\\n                <i>Type: </i><code>{{ input.type }}</code>\\n              </div>\\n              <div *ngIf=\\\"defaultInputValue(input) || hasConfigProperty(input)\\\">\\n                <span><i>Default value: </i><code>{{ defaultInputValue(input) || '-' }}</code></span>\\n                <span *ngIf=\\\"hasConfigProperty(input)\\\">&mdash; initialized from {{ configServiceName }} service</span>\\n              </div>\\n            </div>\\n          </td>\\n        </tr>\\n        </tbody>\\n      </table>\\n    </section>\\n  </ng-template>\\n\\n  <ng-template [ngIf]=\\\"apiDocs.outputs.length\\\">\\n    <section>\\n      <h4>Outputs</h4>\\n      <table class=\\\"table table-sm\\\">\\n        <tbody>\\n          <tr *ngFor=\\\"let output of apiDocs.outputs\\\">\\n            <td class=\\\"label-cell\\\"><code>{{output.name}}</code></td>\\n            <td class=\\\"content-cell\\\">{{output.description}}</td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </section>\\n  </ng-template>\\n\\n  <ng-template [ngIf]=\\\"apiDocs.methods.length && apiDocs.exportAs\\\">\\n    <section>\\n      <h4>Methods</h4>\\n      <table class=\\\"table table-sm\\\">\\n        <tbody>\\n          <tr *ngFor=\\\"let method of apiDocs.methods\\\">\\n            <td class=\\\"label-cell\\\"><code>{{method.name}}</code></td>\\n            <td class=\\\"content-cell\\\">\\n                <p>\\n                    <code>{{methodSignature(method)}}</code>\\n                    <small class=\\\"text-muted\\\" title=\\\"Return type\\\">=&gt; {{ method.returnType }}</small>\\n                </p>\\n                <p>{{ method.description }}</p>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </section>\\n  </ng-template>\\n</div>\\n\"","import {Component, ChangeDetectionStrategy, Input} from '@angular/core';\nimport docs from '../../../../api-docs';\nimport {PropertyDesc, DirectiveDesc, InputDesc, MethodDesc, ClassDesc, signature} from './api-docs.model';\nimport {Analytics} from '../../../shared/analytics/analytics';\n\n/**\n * Displays the API docs of a directive.\n *\n * The default values of its inputs are looked for in the directive api doc itself, or in the matching property\n * of associated Config service, if any.\n *\n * The config service of a directive NgbFoo is, by convention, named NgbFooConfig.\n */\n@Component({\n  selector: 'ngbd-api-docs',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: require('./api-docs.component.html'),\n  styles: [`\n    .label-cell {\n      width: 25%;\n    }\n    .content-cell {\n      width: 75%;\n    }\n    `\n  ]\n})\nexport class NgbdApiDocs {\n\n  /**\n   * Object which contains, for each input name of the directive, the corresponding property of the associated config\n   * service (if any)\n   */\n  private _configProperties: {[propertyName: string]: PropertyDesc};\n\n  apiDocs: DirectiveDesc;\n  configServiceName: string;\n\n  constructor(private _analytics: Analytics) {}\n\n  @Input() set directive(directiveName: string) {\n    this.apiDocs = docs[directiveName];\n    this.configServiceName = `${directiveName}Config`;\n    const configApiDocs = docs[this.configServiceName];\n    this._configProperties = {};\n    if (configApiDocs) {\n      this.apiDocs.inputs.forEach(\n        input => this._configProperties[input.name] = this._findInputConfigProperty(configApiDocs, input));\n    }\n  };\n\n  /**\n   * Returns the default value of the given directive input by first looking for it in the matching config service\n   * property. If there is no matching config property, it reads it from the input.\n   */\n  defaultInputValue(input: InputDesc): string {\n    const configProperty = this._configProperties[input.name];\n    return configProperty ? configProperty.defaultValue : input.defaultValue;\n  }\n\n  /**\n   * Returns true if there is a config service property matching with the given directive input\n   */\n  hasConfigProperty(input: InputDesc): boolean {\n    return !!this._configProperties[input.name];\n  }\n\n  methodSignature(method: MethodDesc): string { return signature(method); }\n\n  trackSourceClick() {\n    this._analytics.trackEvent('Source File View', this.apiDocs.className);\n  }\n\n  private _findInputConfigProperty(configApiDocs: ClassDesc, input: InputDesc): PropertyDesc {\n    return configApiDocs.properties.filter(prop => prop.name === input.name)[0];\n  }\n}\n","export * from './api-docs.component';\nexport * from './api-docs-badge.component';\nexport * from './api-docs-class.component';\nexport * from './api-docs-config.component';\n","module.exports = \"<div class=\\\"component-demo\\\">\\n  <h2>\\n    {{ demoTitle }}\\n    <a\\n      class=\\\"plunker\\\"\\n      target=\\\"_blank\\\" href=\\\"app/components/{{component}}/demos/{{demo}}/plnkr.html\\\"\\n      title=\\\"Edit in Plunker\\\"\\n    >\\n      <img src=\\\"img/plunker-icon.png\\\" height=\\\"24\\\" width=\\\"24\\\" alt=\\\"Plunker icon\\\"/>\\n    </a>\\n  </h2>\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-body\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <ngb-tabset class=\\\"tabset-code\\\">\\n      <ngb-tab id=\\\"{{component}}-{{demo}}-html\\\">\\n        <ng-template ngbTabTitle>\\n          <small class=\\\"badge badge-secondary\\\" title=\\\"HTML template\\\">T</small>\\n          <span>{{component}}-{{demo}}.html</span>\\n        </ng-template>\\n        <ng-template ngbTabContent>\\n          <pre class=\\\"language-html\\\"><code class=\\\"language-html\\\" [innerHTML]=\\\"snippets[demo]['markup']\\\"></code></pre>\\n        </ng-template>\\n      </ngb-tab>\\n      <ngb-tab id=\\\"{{component}}-{{demo}}-typescript\\\">\\n        <ng-template ngbTabTitle>\\n          <small class=\\\"badge badge-info\\\" title=\\\"Component class\\\">C</small>\\n          <span>{{component}}-{{demo}}.ts</span>\\n        </ng-template>\\n        <ng-template ngbTabContent>\\n          <pre class=\\\"language-typescript\\\"><code class=\\\"language-typescript\\\" [innerHTML]=\\\"snippets[demo]['code']\\\"></code></pre>\\n        </ng-template>\\n      </ngb-tab>\\n    </ngb-tabset>\\n  </div>\\n</div>\\n\"","import { Component, Input } from '@angular/core';\nimport {Analytics} from '../../../shared/analytics/analytics';\n\n@Component({\n  selector: 'ngbd-example-box',\n  template: require('./example-box.component.html')\n})\nexport class ExampleBoxComponent {\n  @Input() demoTitle: string;\n  @Input() component: string;\n  @Input() demo: string;\n  @Input() snippets: Object;\n\n  constructor(private _analytics: Analytics) {}\n}\n","export * from './example-box.component';\n","import {NgModule} from '@angular/core';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\n\nimport {NgbdSharedModule} from '../../shared';\nimport {ExampleBoxComponent} from './example-box';\nimport {NgbdApiDocs, NgbdApiDocsBadge, NgbdApiDocsClass, NgbdApiDocsConfig} from './api-docs';\nimport {NgbdFragment} from './fragment';\n\n@NgModule({\n  imports: [NgbdSharedModule, NgbModule],\n  declarations: [ExampleBoxComponent, NgbdApiDocsBadge, NgbdApiDocs, NgbdApiDocsClass, NgbdApiDocsConfig, NgbdFragment],\n  exports: [ExampleBoxComponent, NgbdApiDocsBadge, NgbdApiDocs, NgbdApiDocsClass, NgbdApiDocsConfig, NgbdFragment]\n})\nexport class NgbdComponentsSharedModule {}\n","export * from './toggle';\n\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\n\nimport {NgxToggle, NgxToggleLabel} from './toggle';\n\nconst EXPORT_DIRECTIVES = [NgxToggle, NgxToggleLabel];\n\n@NgModule({imports: [CommonModule], exports: EXPORT_DIRECTIVES, declarations: EXPORT_DIRECTIVES})\nexport class NgxToggleModule {\n}\n","module.exports = \"<span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>div</span><span class=\\\"token punctuation\\\" >></span></span>\\n    <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>ngx-toggle</span>\\n        <span class=\\\"token attr-name\\\" >onColor</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>{{model.onColor}}<span class=\\\"token punctuation\\\" >\\\"</span></span>\\n        <span class=\\\"token attr-name\\\" >onText</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>{{model.onText}}<span class=\\\"token punctuation\\\" >\\\"</span></span>\\n        <span class=\\\"token attr-name\\\" >offColor</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>{{model.offColor}}<span class=\\\"token punctuation\\\" >\\\"</span></span>\\n        <span class=\\\"token attr-name\\\" >offText</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>{{model.offText}}<span class=\\\"token punctuation\\\" >\\\"</span></span>\\n        <span class=\\\"token attr-name\\\" >[disabled]</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>model.disabled<span class=\\\"token punctuation\\\" >\\\"</span></span>\\n        <span class=\\\"token attr-name\\\" >[size]</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>model.size<span class=\\\"token punctuation\\\" >\\\"</span></span>\\n        <span class=\\\"token attr-name\\\" >[(value)]</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>model.value<span class=\\\"token punctuation\\\" >\\\"</span></span>\\n    <span class=\\\"token punctuation\\\" >></span></span>\\n        <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>input</span> <span class=\\\"token attr-name\\\" >type</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>checkbox<span class=\\\"token punctuation\\\" >\\\"</span></span> <span class=\\\"token attr-name\\\" >[(ngModel)]</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>model.value<span class=\\\"token punctuation\\\" >\\\"</span></span> <span class=\\\"token attr-name\\\" >[disabled]</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>model.disabled<span class=\\\"token punctuation\\\" >\\\"</span></span> <span class=\\\"token punctuation\\\" >/></span></span>\\n    <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;/</span>ngx-toggle</span><span class=\\\"token punctuation\\\" >></span></span>\\n<span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;/</span>div</span><span class=\\\"token punctuation\\\" >></span></span>\\n<span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>pre</span> <span class=\\\"token attr-name\\\" >class</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>my-2<span class=\\\"token punctuation\\\" >\\\"</span></span><span class=\\\"token punctuation\\\" >></span></span>{{model | json}}<span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;/</span>pre</span><span class=\\\"token punctuation\\\" >></span></span>\\n<span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>div</span> <span class=\\\"token attr-name\\\" >class</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>row mb-2<span class=\\\"token punctuation\\\" >\\\"</span></span><span class=\\\"token punctuation\\\" >></span></span>\\n    <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>div</span> <span class=\\\"token attr-name\\\" >class</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>col-3<span class=\\\"token punctuation\\\" >\\\"</span></span><span class=\\\"token punctuation\\\" >></span></span>Disable:<span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;/</span>div</span><span class=\\\"token punctuation\\\" >></span></span>\\n    <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>div</span> <span class=\\\"token attr-name\\\" >class</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>col-9<span class=\\\"token punctuation\\\" >\\\"</span></span><span class=\\\"token punctuation\\\" >></span></span>\\n        <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>input</span> <span class=\\\"token attr-name\\\" >type</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>checkbox<span class=\\\"token punctuation\\\" >\\\"</span></span> <span class=\\\"token attr-name\\\" >[(ngModel)]</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>model.disabled<span class=\\\"token punctuation\\\" >\\\"</span></span> <span class=\\\"token punctuation\\\" >/></span></span>\\n    <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;/</span>div</span><span class=\\\"token punctuation\\\" >></span></span>\\n<span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;/</span>div</span><span class=\\\"token punctuation\\\" >></span></span>\\n<span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>div</span> <span class=\\\"token attr-name\\\" >class</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>row mb-2<span class=\\\"token punctuation\\\" >\\\"</span></span><span class=\\\"token punctuation\\\" >></span></span>\\n    <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>div</span> <span class=\\\"token attr-name\\\" >class</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>col-3<span class=\\\"token punctuation\\\" >\\\"</span></span><span class=\\\"token punctuation\\\" >></span></span>Indeterminate:<span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;/</span>div</span><span class=\\\"token punctuation\\\" >></span></span>\\n    <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>div</span> <span class=\\\"token attr-name\\\" >class</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>col-9<span class=\\\"token punctuation\\\" >\\\"</span></span><span class=\\\"token punctuation\\\" >></span></span>\\n        <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>input</span> <span class=\\\"token attr-name\\\" >type</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>checkbox<span class=\\\"token punctuation\\\" >\\\"</span></span> <span class=\\\"token attr-name\\\" >#ind</span> <span class=\\\"token attr-name\\\" >[checked]</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>model.value <span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >=</span> null<span class=\\\"token punctuation\\\" >\\\"</span></span> <span class=\\\"token attr-name\\\" >(change)</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>model.value <span class=\\\"token punctuation\\\" >=</span> ind.checked ? null : (model.value || false)<span class=\\\"token punctuation\\\" >\\\"</span></span> <span class=\\\"token punctuation\\\" >/></span></span>\\n    <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;/</span>div</span><span class=\\\"token punctuation\\\" >></span></span>\\n<span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;/</span>div</span><span class=\\\"token punctuation\\\" >></span></span>\\n<span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>div</span> <span class=\\\"token attr-name\\\" >class</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>row mb-2<span class=\\\"token punctuation\\\" >\\\"</span></span><span class=\\\"token punctuation\\\" >></span></span>\\n    <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>div</span> <span class=\\\"token attr-name\\\" >class</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>col-3<span class=\\\"token punctuation\\\" >\\\"</span></span><span class=\\\"token punctuation\\\" >></span></span>Size:<span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;/</span>div</span><span class=\\\"token punctuation\\\" >></span></span>\\n    <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>div</span> <span class=\\\"token attr-name\\\" >class</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>col-9<span class=\\\"token punctuation\\\" >\\\"</span></span><span class=\\\"token punctuation\\\" >></span></span>\\n        <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>label</span> <span class=\\\"token attr-name\\\" >class</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>mr-2<span class=\\\"token punctuation\\\" >\\\"</span></span><span class=\\\"token punctuation\\\" >></span></span>\\n            <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>input</span> <span class=\\\"token attr-name\\\" >type</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>radio<span class=\\\"token punctuation\\\" >\\\"</span></span> <span class=\\\"token attr-name\\\" >[(ngModel)]</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>model.size<span class=\\\"token punctuation\\\" >\\\"</span></span> <span class=\\\"token attr-name\\\" >value</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>sm<span class=\\\"token punctuation\\\" >\\\"</span></span> <span class=\\\"token punctuation\\\" >/></span></span>\\n            Small\\n        <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;/</span>label</span><span class=\\\"token punctuation\\\" >></span></span>\\n        <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>label</span> <span class=\\\"token attr-name\\\" >class</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>mr-2<span class=\\\"token punctuation\\\" >\\\"</span></span><span class=\\\"token punctuation\\\" >></span></span>\\n            <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>input</span> <span class=\\\"token attr-name\\\" >type</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>radio<span class=\\\"token punctuation\\\" >\\\"</span></span> <span class=\\\"token attr-name\\\" >[(ngModel)]</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>model.size<span class=\\\"token punctuation\\\" >\\\"</span></span> <span class=\\\"token attr-name\\\" >value</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span><span class=\\\"token punctuation\\\" >\\\"</span></span> <span class=\\\"token punctuation\\\" >/></span></span>\\n            Normal\\n        <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;/</span>label</span><span class=\\\"token punctuation\\\" >></span></span>\\n        <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>label</span><span class=\\\"token punctuation\\\" >></span></span>\\n            <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>input</span> <span class=\\\"token attr-name\\\" >type</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>radio<span class=\\\"token punctuation\\\" >\\\"</span></span> <span class=\\\"token attr-name\\\" >[(ngModel)]</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>model.size<span class=\\\"token punctuation\\\" >\\\"</span></span> <span class=\\\"token attr-name\\\" >value</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>lg<span class=\\\"token punctuation\\\" >\\\"</span></span> <span class=\\\"token punctuation\\\" >/></span></span>\\n            Large\\n        <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;/</span>label</span><span class=\\\"token punctuation\\\" >></span></span>\\n    <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;/</span>div</span><span class=\\\"token punctuation\\\" >></span></span>\\n<span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;/</span>div</span><span class=\\\"token punctuation\\\" >></span></span>\\n<span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>div</span> <span class=\\\"token attr-name\\\" >class</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>row mb-2<span class=\\\"token punctuation\\\" >\\\"</span></span><span class=\\\"token punctuation\\\" >></span></span>\\n    <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>div</span> <span class=\\\"token attr-name\\\" >class</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>col-3<span class=\\\"token punctuation\\\" >\\\"</span></span><span class=\\\"token punctuation\\\" >></span></span>On Color:<span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;/</span>div</span><span class=\\\"token punctuation\\\" >></span></span>\\n    <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>div</span> <span class=\\\"token attr-name\\\" >class</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>col-9<span class=\\\"token punctuation\\\" >\\\"</span></span><span class=\\\"token punctuation\\\" >></span></span>\\n        <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>button</span> <span class=\\\"token attr-name\\\" >*ngFor</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>let color of colors<span class=\\\"token punctuation\\\" >\\\"</span></span> <span class=\\\"token attr-name\\\" >class</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>mr-1 mb-1 btn btn-{{color}}<span class=\\\"token punctuation\\\" >\\\"</span></span> <span class=\\\"token attr-name\\\" >[ngClass]</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>{<span class=\\\"token punctuation\\\" >'</span>active<span class=\\\"token punctuation\\\" >'</span>: model.onColor <span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >=</span> color}<span class=\\\"token punctuation\\\" >\\\"</span></span> <span class=\\\"token attr-name\\\" >(click)</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>setOnColor($event, color)<span class=\\\"token punctuation\\\" >\\\"</span></span><span class=\\\"token punctuation\\\" >></span></span>{{color | titlecase}}<span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;/</span>button</span><span class=\\\"token punctuation\\\" >></span></span>\\n    <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;/</span>div</span><span class=\\\"token punctuation\\\" >></span></span>\\n<span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;/</span>div</span><span class=\\\"token punctuation\\\" >></span></span>\\n<span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>div</span> <span class=\\\"token attr-name\\\" >class</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>row mb-2<span class=\\\"token punctuation\\\" >\\\"</span></span><span class=\\\"token punctuation\\\" >></span></span>\\n    <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>div</span> <span class=\\\"token attr-name\\\" >class</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>col-3<span class=\\\"token punctuation\\\" >\\\"</span></span><span class=\\\"token punctuation\\\" >></span></span>On Text<span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;/</span>div</span><span class=\\\"token punctuation\\\" >></span></span>\\n    <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>div</span> <span class=\\\"token attr-name\\\" >class</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>col-9<span class=\\\"token punctuation\\\" >\\\"</span></span><span class=\\\"token punctuation\\\" >></span></span>\\n        <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>input</span> <span class=\\\"token attr-name\\\" >type</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>text<span class=\\\"token punctuation\\\" >\\\"</span></span> <span class=\\\"token attr-name\\\" >[(ngModel)]</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>model.onText<span class=\\\"token punctuation\\\" >\\\"</span></span> <span class=\\\"token attr-name\\\" >class</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>form-control<span class=\\\"token punctuation\\\" >\\\"</span></span> <span class=\\\"token attr-name\\\" >placeholder</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>On Text<span class=\\\"token punctuation\\\" >\\\"</span></span> <span class=\\\"token punctuation\\\" >/></span></span>\\n    <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;/</span>div</span><span class=\\\"token punctuation\\\" >></span></span>\\n<span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;/</span>div</span><span class=\\\"token punctuation\\\" >></span></span>\\n<span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>div</span> <span class=\\\"token attr-name\\\" >class</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>row mb-2<span class=\\\"token punctuation\\\" >\\\"</span></span><span class=\\\"token punctuation\\\" >></span></span>\\n    <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>div</span> <span class=\\\"token attr-name\\\" >class</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>col-3<span class=\\\"token punctuation\\\" >\\\"</span></span><span class=\\\"token punctuation\\\" >></span></span>Off Color:<span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;/</span>div</span><span class=\\\"token punctuation\\\" >></span></span>\\n    <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>div</span> <span class=\\\"token attr-name\\\" >class</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>col-9<span class=\\\"token punctuation\\\" >\\\"</span></span><span class=\\\"token punctuation\\\" >></span></span>\\n        <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>button</span> <span class=\\\"token attr-name\\\" >*ngFor</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>let color of colors<span class=\\\"token punctuation\\\" >\\\"</span></span> <span class=\\\"token attr-name\\\" >class</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>mr-1 mb-1 btn btn-{{color}}<span class=\\\"token punctuation\\\" >\\\"</span></span> <span class=\\\"token attr-name\\\" >[ngClass]</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>{<span class=\\\"token punctuation\\\" >'</span>active<span class=\\\"token punctuation\\\" >'</span>: model.offColor <span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >=</span> color}<span class=\\\"token punctuation\\\" >\\\"</span></span> <span class=\\\"token attr-name\\\" >(click)</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>setOffColor($event, color)<span class=\\\"token punctuation\\\" >\\\"</span></span><span class=\\\"token punctuation\\\" >></span></span>{{color | titlecase}}<span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;/</span>button</span><span class=\\\"token punctuation\\\" >></span></span>\\n    <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;/</span>div</span><span class=\\\"token punctuation\\\" >></span></span>\\n<span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;/</span>div</span><span class=\\\"token punctuation\\\" >></span></span>\\n<span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>div</span> <span class=\\\"token attr-name\\\" >class</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>row mb-2<span class=\\\"token punctuation\\\" >\\\"</span></span><span class=\\\"token punctuation\\\" >></span></span>\\n    <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>div</span> <span class=\\\"token attr-name\\\" >class</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>col-3<span class=\\\"token punctuation\\\" >\\\"</span></span><span class=\\\"token punctuation\\\" >></span></span>Off Text<span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;/</span>div</span><span class=\\\"token punctuation\\\" >></span></span>\\n    <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>div</span> <span class=\\\"token attr-name\\\" >class</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>col-9<span class=\\\"token punctuation\\\" >\\\"</span></span><span class=\\\"token punctuation\\\" >></span></span>\\n        <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>input</span> <span class=\\\"token attr-name\\\" >type</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>text<span class=\\\"token punctuation\\\" >\\\"</span></span> <span class=\\\"token attr-name\\\" >[(ngModel)]</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>model.offText<span class=\\\"token punctuation\\\" >\\\"</span></span> <span class=\\\"token attr-name\\\" >class</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>form-control<span class=\\\"token punctuation\\\" >\\\"</span></span> <span class=\\\"token attr-name\\\" >placeholder</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>Off Text<span class=\\\"token punctuation\\\" >\\\"</span></span> <span class=\\\"token punctuation\\\" >/></span></span>\\n    <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;/</span>div</span><span class=\\\"token punctuation\\\" >></span></span>\\n<span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;/</span>div</span><span class=\\\"token punctuation\\\" >></span></span>\\n\"","module.exports = \"<span class=\\\"token keyword\\\" >import</span> <span class=\\\"token punctuation\\\" >{</span> Component <span class=\\\"token punctuation\\\" >}</span> from <span class=\\\"token string\\\" >'@angular/core'</span><span class=\\\"token punctuation\\\" >;</span>\\n\\n@<span class=\\\"token function\\\" >Component</span><span class=\\\"token punctuation\\\" >(</span><span class=\\\"token punctuation\\\" >{</span>\\n  selector<span class=\\\"token punctuation\\\" >:</span> <span class=\\\"token string\\\" >'ngxd-toggle-kitchen-sink'</span><span class=\\\"token punctuation\\\" >,</span>\\n  templateUrl<span class=\\\"token punctuation\\\" >:</span> <span class=\\\"token string\\\" >'./toggle-kitchen-sink.html'</span>\\n<span class=\\\"token punctuation\\\" >}</span><span class=\\\"token punctuation\\\" >)</span>\\n<span class=\\\"token keyword\\\" >export</span> <span class=\\\"token keyword\\\" >class</span> <span class=\\\"token class-name\\\" >NgxdToggleKitchenSink</span> <span class=\\\"token punctuation\\\" >{</span>\\n  model<span class=\\\"token punctuation\\\" >:</span> <span class=\\\"token keyword\\\" >any</span> <span class=\\\"token operator\\\" >=</span> <span class=\\\"token punctuation\\\" >{</span>\\n    onColor<span class=\\\"token punctuation\\\" >:</span> <span class=\\\"token string\\\" >'primary'</span><span class=\\\"token punctuation\\\" >,</span>\\n    offColor<span class=\\\"token punctuation\\\" >:</span> <span class=\\\"token string\\\" >'secondary'</span><span class=\\\"token punctuation\\\" >,</span>\\n    onText<span class=\\\"token punctuation\\\" >:</span> <span class=\\\"token string\\\" >'On'</span><span class=\\\"token punctuation\\\" >,</span>\\n    offText<span class=\\\"token punctuation\\\" >:</span> <span class=\\\"token string\\\" >'Off'</span><span class=\\\"token punctuation\\\" >,</span>\\n    disabled<span class=\\\"token punctuation\\\" >:</span> <span class=\\\"token keyword\\\" >false</span><span class=\\\"token punctuation\\\" >,</span>\\n    size<span class=\\\"token punctuation\\\" >:</span> <span class=\\\"token string\\\" >''</span><span class=\\\"token punctuation\\\" >,</span>\\n    value<span class=\\\"token punctuation\\\" >:</span> <span class=\\\"token keyword\\\" >null</span>\\n  <span class=\\\"token punctuation\\\" >}</span><span class=\\\"token punctuation\\\" >;</span>\\n\\n  colors<span class=\\\"token punctuation\\\" >:</span> <span class=\\\"token keyword\\\" >any</span> <span class=\\\"token operator\\\" >=</span> <span class=\\\"token punctuation\\\" >[</span><span class=\\\"token string\\\" >'primary'</span><span class=\\\"token punctuation\\\" >,</span> <span class=\\\"token string\\\" >'secondary'</span><span class=\\\"token punctuation\\\" >,</span> <span class=\\\"token string\\\" >'success'</span><span class=\\\"token punctuation\\\" >,</span> <span class=\\\"token string\\\" >'danger'</span><span class=\\\"token punctuation\\\" >,</span> <span class=\\\"token string\\\" >'warning'</span><span class=\\\"token punctuation\\\" >,</span> <span class=\\\"token string\\\" >'info'</span><span class=\\\"token punctuation\\\" >,</span> <span class=\\\"token string\\\" >'light'</span><span class=\\\"token punctuation\\\" >,</span> <span class=\\\"token string\\\" >'dark'</span><span class=\\\"token punctuation\\\" >]</span><span class=\\\"token punctuation\\\" >;</span>\\n\\n  <span class=\\\"token function\\\" >setOnColor</span><span class=\\\"token punctuation\\\" >(</span>event<span class=\\\"token punctuation\\\" >:</span> MouseEvent<span class=\\\"token punctuation\\\" >,</span> color<span class=\\\"token punctuation\\\" >:</span> <span class=\\\"token keyword\\\" >string</span><span class=\\\"token punctuation\\\" >)</span> <span class=\\\"token punctuation\\\" >{</span>\\n    event<span class=\\\"token punctuation\\\" >.</span><span class=\\\"token function\\\" >preventDefault</span><span class=\\\"token punctuation\\\" >(</span><span class=\\\"token punctuation\\\" >)</span><span class=\\\"token punctuation\\\" >;</span>\\n    event<span class=\\\"token punctuation\\\" >.</span><span class=\\\"token function\\\" >stopPropagation</span><span class=\\\"token punctuation\\\" >(</span><span class=\\\"token punctuation\\\" >)</span><span class=\\\"token punctuation\\\" >;</span>\\n    <span class=\\\"token keyword\\\" >this</span><span class=\\\"token punctuation\\\" >.</span>model<span class=\\\"token punctuation\\\" >.</span>onColor <span class=\\\"token operator\\\" >=</span> color<span class=\\\"token punctuation\\\" >;</span>\\n  <span class=\\\"token punctuation\\\" >}</span>\\n\\n  <span class=\\\"token function\\\" >setOffColor</span><span class=\\\"token punctuation\\\" >(</span>event<span class=\\\"token punctuation\\\" >:</span> MouseEvent<span class=\\\"token punctuation\\\" >,</span> color<span class=\\\"token punctuation\\\" >:</span> <span class=\\\"token keyword\\\" >string</span><span class=\\\"token punctuation\\\" >)</span> <span class=\\\"token punctuation\\\" >{</span>\\n    event<span class=\\\"token punctuation\\\" >.</span><span class=\\\"token function\\\" >preventDefault</span><span class=\\\"token punctuation\\\" >(</span><span class=\\\"token punctuation\\\" >)</span><span class=\\\"token punctuation\\\" >;</span>\\n    event<span class=\\\"token punctuation\\\" >.</span><span class=\\\"token function\\\" >stopPropagation</span><span class=\\\"token punctuation\\\" >(</span><span class=\\\"token punctuation\\\" >)</span><span class=\\\"token punctuation\\\" >;</span>\\n    <span class=\\\"token keyword\\\" >this</span><span class=\\\"token punctuation\\\" >.</span>model<span class=\\\"token punctuation\\\" >.</span>offColor <span class=\\\"token operator\\\" >=</span> color<span class=\\\"token punctuation\\\" >;</span>\\n  <span class=\\\"token punctuation\\\" >}</span>\\n<span class=\\\"token punctuation\\\" >}</span>\\n\"","module.exports = \"<span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>div</span><span class=\\\"token punctuation\\\" >></span></span>\\n    <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>ngx-toggle</span>\\n        <span class=\\\"token attr-name\\\" >onColor</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>{{model.onColor}}<span class=\\\"token punctuation\\\" >\\\"</span></span>\\n        <span class=\\\"token attr-name\\\" >onText</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>{{model.onText}}<span class=\\\"token punctuation\\\" >\\\"</span></span>\\n        <span class=\\\"token attr-name\\\" >offColor</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>{{model.offColor}}<span class=\\\"token punctuation\\\" >\\\"</span></span>\\n        <span class=\\\"token attr-name\\\" >offText</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>{{model.offText}}<span class=\\\"token punctuation\\\" >\\\"</span></span>\\n        <span class=\\\"token attr-name\\\" >[disabled]</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>model.disabled<span class=\\\"token punctuation\\\" >\\\"</span></span>\\n        <span class=\\\"token attr-name\\\" >[size]</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>model.size<span class=\\\"token punctuation\\\" >\\\"</span></span>\\n        <span class=\\\"token attr-name\\\" >[(value)]</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>model.value<span class=\\\"token punctuation\\\" >\\\"</span></span>\\n    <span class=\\\"token punctuation\\\" >></span></span>\\n        <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>ng-template</span> <span class=\\\"token attr-name\\\" >ngxToggleLabel</span> <span class=\\\"token attr-name\\\" >forLabel</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>on<span class=\\\"token punctuation\\\" >\\\"</span></span><span class=\\\"token punctuation\\\" >></span></span><span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>span</span> <span class=\\\"token attr-name\\\" >class</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>fa fa-play<span class=\\\"token punctuation\\\" >\\\"</span></span><span class=\\\"token punctuation\\\" >></span></span><span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;/</span>span</span><span class=\\\"token punctuation\\\" >></span></span><span class=\\\"token entity\\\" title=\\\"&nbsp;\\\">&amp;nbsp;</span>It's On!<span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>br</span> <span class=\\\"token punctuation\\\" >/></span></span>Like Donkey Kong!<span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;/</span>ng-template</span><span class=\\\"token punctuation\\\" >></span></span>\\n        <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>ng-template</span> <span class=\\\"token attr-name\\\" >ngxToggleLabel</span> <span class=\\\"token attr-name\\\" >forLabel</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>off<span class=\\\"token punctuation\\\" >\\\"</span></span><span class=\\\"token punctuation\\\" >></span></span><span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>span</span> <span class=\\\"token attr-name\\\" >class</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>fa fa-stop<span class=\\\"token punctuation\\\" >\\\"</span></span><span class=\\\"token punctuation\\\" >></span></span><span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;/</span>span</span><span class=\\\"token punctuation\\\" >></span></span><span class=\\\"token entity\\\" title=\\\"&nbsp;\\\">&amp;nbsp;</span>And... We're Down.<span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;/</span>ng-template</span><span class=\\\"token punctuation\\\" >></span></span>\\n    <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;/</span>ngx-toggle</span><span class=\\\"token punctuation\\\" >></span></span>\\n<span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;/</span>div</span><span class=\\\"token punctuation\\\" >></span></span>\\n<span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>pre</span> <span class=\\\"token attr-name\\\" >class</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>my-2<span class=\\\"token punctuation\\\" >\\\"</span></span><span class=\\\"token punctuation\\\" >></span></span>{{model | json}}<span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;/</span>pre</span><span class=\\\"token punctuation\\\" >></span></span>\\n\"","module.exports = \"<span class=\\\"token keyword\\\" >import</span> <span class=\\\"token punctuation\\\" >{</span> Component <span class=\\\"token punctuation\\\" >}</span> from <span class=\\\"token string\\\" >'@angular/core'</span><span class=\\\"token punctuation\\\" >;</span>\\n\\n@<span class=\\\"token function\\\" >Component</span><span class=\\\"token punctuation\\\" >(</span><span class=\\\"token punctuation\\\" >{</span>\\n  selector<span class=\\\"token punctuation\\\" >:</span> <span class=\\\"token string\\\" >'ngxd-toggle-custom-label'</span><span class=\\\"token punctuation\\\" >,</span>\\n  templateUrl<span class=\\\"token punctuation\\\" >:</span> <span class=\\\"token string\\\" >'./toggle-custom-label.html'</span><span class=\\\"token punctuation\\\" >,</span>\\n  styles<span class=\\\"token punctuation\\\" >:</span> <span class=\\\"token punctuation\\\" >[</span>\\n      '@<span class=\\\"token keyword\\\" >import</span> <span class=\\\"token function\\\" >url</span><span class=\\\"token punctuation\\\" >(</span>\\\"<span class=\\\"token comment\\\" spellcheck=\\\"true\\\">//maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\\\");'</span>\\n  <span class=\\\"token punctuation\\\" >]</span>\\n<span class=\\\"token punctuation\\\" >}</span><span class=\\\"token punctuation\\\" >)</span>\\n<span class=\\\"token keyword\\\" >export</span> <span class=\\\"token keyword\\\" >class</span> <span class=\\\"token class-name\\\" >NgxdToggleCustomLabel</span> <span class=\\\"token punctuation\\\" >{</span>\\n  model<span class=\\\"token punctuation\\\" >:</span> <span class=\\\"token keyword\\\" >any</span> <span class=\\\"token operator\\\" >=</span> <span class=\\\"token punctuation\\\" >{</span>\\n    onColor<span class=\\\"token punctuation\\\" >:</span> <span class=\\\"token string\\\" >'primary'</span><span class=\\\"token punctuation\\\" >,</span>\\n    offColor<span class=\\\"token punctuation\\\" >:</span> <span class=\\\"token string\\\" >'secondary'</span><span class=\\\"token punctuation\\\" >,</span>\\n    offText<span class=\\\"token punctuation\\\" >:</span> <span class=\\\"token string\\\" >'Off'</span><span class=\\\"token punctuation\\\" >,</span>\\n    disabled<span class=\\\"token punctuation\\\" >:</span> <span class=\\\"token keyword\\\" >false</span><span class=\\\"token punctuation\\\" >,</span>\\n    size<span class=\\\"token punctuation\\\" >:</span> <span class=\\\"token string\\\" >''</span><span class=\\\"token punctuation\\\" >,</span>\\n    value<span class=\\\"token punctuation\\\" >:</span> <span class=\\\"token keyword\\\" >null</span>\\n  <span class=\\\"token punctuation\\\" >}</span><span class=\\\"token punctuation\\\" >;</span>\\n<span class=\\\"token punctuation\\\" >}</span>\\n\"","module.exports = \"<span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>div</span><span class=\\\"token punctuation\\\" >></span></span>\\n    <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>ngx-toggle</span>\\n            <span class=\\\"token attr-name\\\" >onColor</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>{{model.onColor}}<span class=\\\"token punctuation\\\" >\\\"</span></span>\\n            <span class=\\\"token attr-name\\\" >onText</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>{{model.onText}}<span class=\\\"token punctuation\\\" >\\\"</span></span>\\n            <span class=\\\"token attr-name\\\" >offColor</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>{{model.offColor}}<span class=\\\"token punctuation\\\" >\\\"</span></span>\\n            <span class=\\\"token attr-name\\\" >offText</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>{{model.offText}}<span class=\\\"token punctuation\\\" >\\\"</span></span>\\n            <span class=\\\"token attr-name\\\" >[disabled]</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>model.disabled<span class=\\\"token punctuation\\\" >\\\"</span></span>\\n            <span class=\\\"token attr-name\\\" >[size]</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>model.size<span class=\\\"token punctuation\\\" >\\\"</span></span>\\n            <span class=\\\"token attr-name\\\" >[(value)]</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>model.value<span class=\\\"token punctuation\\\" >\\\"</span></span>\\n    <span class=\\\"token punctuation\\\" >></span></span>\\n        <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>input</span> <span class=\\\"token attr-name\\\" >type</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>checkbox<span class=\\\"token punctuation\\\" >\\\"</span></span> <span class=\\\"token attr-name\\\" >[disabled]</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>model.disabled<span class=\\\"token punctuation\\\" >\\\"</span></span> <span class=\\\"token attr-name\\\" >[(ngModel)]</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>model.value<span class=\\\"token punctuation\\\" >\\\"</span></span> <span class=\\\"token punctuation\\\" >/></span></span>\\n    <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;/</span>ngx-toggle</span><span class=\\\"token punctuation\\\" >></span></span>\\n<span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;/</span>div</span><span class=\\\"token punctuation\\\" >></span></span>\\n<span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>pre</span> <span class=\\\"token attr-name\\\" >class</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>my-2<span class=\\\"token punctuation\\\" >\\\"</span></span><span class=\\\"token punctuation\\\" >></span></span>{{model | json}}<span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;/</span>pre</span><span class=\\\"token punctuation\\\" >></span></span>\\n<span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>div</span> <span class=\\\"token attr-name\\\" >class</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>row mb-2<span class=\\\"token punctuation\\\" >\\\"</span></span><span class=\\\"token punctuation\\\" >></span></span>\\n    <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>div</span> <span class=\\\"token attr-name\\\" >class</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>col-3<span class=\\\"token punctuation\\\" >\\\"</span></span><span class=\\\"token punctuation\\\" >></span></span>Disable:<span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;/</span>div</span><span class=\\\"token punctuation\\\" >></span></span>\\n    <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>div</span> <span class=\\\"token attr-name\\\" >class</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>col-9<span class=\\\"token punctuation\\\" >\\\"</span></span><span class=\\\"token punctuation\\\" >></span></span>\\n        <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>input</span> <span class=\\\"token attr-name\\\" >type</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>checkbox<span class=\\\"token punctuation\\\" >\\\"</span></span> <span class=\\\"token attr-name\\\" >[(ngModel)]</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>model.disabled<span class=\\\"token punctuation\\\" >\\\"</span></span> <span class=\\\"token punctuation\\\" >/></span></span>\\n    <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;/</span>div</span><span class=\\\"token punctuation\\\" >></span></span>\\n<span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;/</span>div</span><span class=\\\"token punctuation\\\" >></span></span>\\n\"","module.exports = \"<span class=\\\"token keyword\\\" >import</span> <span class=\\\"token punctuation\\\" >{</span> Component <span class=\\\"token punctuation\\\" >}</span> from <span class=\\\"token string\\\" >'@angular/core'</span><span class=\\\"token punctuation\\\" >;</span>\\n\\n@<span class=\\\"token function\\\" >Component</span><span class=\\\"token punctuation\\\" >(</span><span class=\\\"token punctuation\\\" >{</span>\\n  selector<span class=\\\"token punctuation\\\" >:</span> <span class=\\\"token string\\\" >'ngxd-toggle-input'</span><span class=\\\"token punctuation\\\" >,</span>\\n  templateUrl<span class=\\\"token punctuation\\\" >:</span> <span class=\\\"token string\\\" >'./toggle-input.html'</span>\\n<span class=\\\"token punctuation\\\" >}</span><span class=\\\"token punctuation\\\" >)</span>\\n<span class=\\\"token keyword\\\" >export</span> <span class=\\\"token keyword\\\" >class</span> <span class=\\\"token class-name\\\" >NgxdToggleInput</span> <span class=\\\"token punctuation\\\" >{</span>\\n  model<span class=\\\"token punctuation\\\" >:</span> <span class=\\\"token keyword\\\" >any</span> <span class=\\\"token operator\\\" >=</span> <span class=\\\"token punctuation\\\" >{</span>\\n    onColor<span class=\\\"token punctuation\\\" >:</span> <span class=\\\"token string\\\" >'primary'</span><span class=\\\"token punctuation\\\" >,</span>\\n    offColor<span class=\\\"token punctuation\\\" >:</span> <span class=\\\"token string\\\" >'secondary'</span><span class=\\\"token punctuation\\\" >,</span>\\n    onText<span class=\\\"token punctuation\\\" >:</span> <span class=\\\"token string\\\" >'On'</span><span class=\\\"token punctuation\\\" >,</span>\\n    offText<span class=\\\"token punctuation\\\" >:</span> <span class=\\\"token string\\\" >'Off'</span><span class=\\\"token punctuation\\\" >,</span>\\n    disabled<span class=\\\"token punctuation\\\" >:</span> <span class=\\\"token keyword\\\" >false</span><span class=\\\"token punctuation\\\" >,</span>\\n    size<span class=\\\"token punctuation\\\" >:</span> <span class=\\\"token string\\\" >''</span><span class=\\\"token punctuation\\\" >,</span>\\n    value<span class=\\\"token punctuation\\\" >:</span> <span class=\\\"token keyword\\\" >null</span>\\n  <span class=\\\"token punctuation\\\" >}</span><span class=\\\"token punctuation\\\" >;</span>\\n<span class=\\\"token punctuation\\\" >}</span>\\n\"","module.exports = \"<span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>div</span><span class=\\\"token punctuation\\\" >></span></span>\\n    <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>ngx-toggle</span>\\n        <span class=\\\"token attr-name\\\" >onColor</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>{{model.onColor}}<span class=\\\"token punctuation\\\" >\\\"</span></span>\\n        <span class=\\\"token attr-name\\\" >onText</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>{{model.onText}}<span class=\\\"token punctuation\\\" >\\\"</span></span>\\n        <span class=\\\"token attr-name\\\" >offColor</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>{{model.offColor}}<span class=\\\"token punctuation\\\" >\\\"</span></span>\\n        <span class=\\\"token attr-name\\\" >offText</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>{{model.offText}}<span class=\\\"token punctuation\\\" >\\\"</span></span>\\n        <span class=\\\"token attr-name\\\" >[disabled]</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>model.disabled<span class=\\\"token punctuation\\\" >\\\"</span></span>\\n        <span class=\\\"token attr-name\\\" >[size]</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>model.size<span class=\\\"token punctuation\\\" >\\\"</span></span>\\n        <span class=\\\"token attr-name\\\" >[(value)]</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>model.value<span class=\\\"token punctuation\\\" >\\\"</span></span>\\n    <span class=\\\"token punctuation\\\" >></span></span>\\n    <span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;/</span>ngx-toggle</span><span class=\\\"token punctuation\\\" >></span></span>\\n<span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;/</span>div</span><span class=\\\"token punctuation\\\" >></span></span>\\n<span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;</span>pre</span> <span class=\\\"token attr-name\\\" >class</span><span class=\\\"token attr-value\\\" ><span class=\\\"token punctuation\\\" >=</span><span class=\\\"token punctuation\\\" >\\\"</span>my-2<span class=\\\"token punctuation\\\" >\\\"</span></span><span class=\\\"token punctuation\\\" >></span></span>{{model | json}}<span class=\\\"token tag\\\" ><span class=\\\"token tag\\\" ><span class=\\\"token punctuation\\\" >&lt;/</span>pre</span><span class=\\\"token punctuation\\\" >></span></span>\\n\"","module.exports = \"<span class=\\\"token keyword\\\" >import</span> <span class=\\\"token punctuation\\\" >{</span> Component <span class=\\\"token punctuation\\\" >}</span> from <span class=\\\"token string\\\" >'@angular/core'</span><span class=\\\"token punctuation\\\" >;</span>\\n\\n@<span class=\\\"token function\\\" >Component</span><span class=\\\"token punctuation\\\" >(</span><span class=\\\"token punctuation\\\" >{</span>\\n  selector<span class=\\\"token punctuation\\\" >:</span> <span class=\\\"token string\\\" >'ngxd-toggle-basic'</span><span class=\\\"token punctuation\\\" >,</span>\\n  templateUrl<span class=\\\"token punctuation\\\" >:</span> <span class=\\\"token string\\\" >'./toggle-basic.html'</span>\\n<span class=\\\"token punctuation\\\" >}</span><span class=\\\"token punctuation\\\" >)</span>\\n<span class=\\\"token keyword\\\" >export</span> <span class=\\\"token keyword\\\" >class</span> <span class=\\\"token class-name\\\" >NgxdToggleBasic</span> <span class=\\\"token punctuation\\\" >{</span>\\n  model<span class=\\\"token punctuation\\\" >:</span> <span class=\\\"token keyword\\\" >any</span> <span class=\\\"token operator\\\" >=</span> <span class=\\\"token punctuation\\\" >{</span>\\n    onColor<span class=\\\"token punctuation\\\" >:</span> <span class=\\\"token string\\\" >'primary'</span><span class=\\\"token punctuation\\\" >,</span>\\n    offColor<span class=\\\"token punctuation\\\" >:</span> <span class=\\\"token string\\\" >'secondary'</span><span class=\\\"token punctuation\\\" >,</span>\\n    onText<span class=\\\"token punctuation\\\" >:</span> <span class=\\\"token string\\\" >'On'</span><span class=\\\"token punctuation\\\" >,</span>\\n    offText<span class=\\\"token punctuation\\\" >:</span> <span class=\\\"token string\\\" >'Off'</span><span class=\\\"token punctuation\\\" >,</span>\\n    disabled<span class=\\\"token punctuation\\\" >:</span> <span class=\\\"token keyword\\\" >false</span><span class=\\\"token punctuation\\\" >,</span>\\n    size<span class=\\\"token punctuation\\\" >:</span> <span class=\\\"token string\\\" >''</span><span class=\\\"token punctuation\\\" >,</span>\\n    value<span class=\\\"token punctuation\\\" >:</span> <span class=\\\"token keyword\\\" >null</span>\\n  <span class=\\\"token punctuation\\\" >}</span><span class=\\\"token punctuation\\\" >;</span>\\n<span class=\\\"token punctuation\\\" >}</span>\\n\"","module.exports = \"<div>\\n    <ngx-toggle\\n        onColor=\\\"{{model.onColor}}\\\"\\n        onText=\\\"{{model.onText}}\\\"\\n        offColor=\\\"{{model.offColor}}\\\"\\n        offText=\\\"{{model.offText}}\\\"\\n        [disabled]=\\\"model.disabled\\\"\\n        [size]=\\\"model.size\\\"\\n        [(value)]=\\\"model.value\\\"\\n    >\\n        <input type=\\\"checkbox\\\" [(ngModel)]=\\\"model.value\\\" [disabled]=\\\"model.disabled\\\" />\\n    </ngx-toggle>\\n</div>\\n<pre class=\\\"my-2\\\">{{model | json}}</pre>\\n<div class=\\\"row mb-2\\\">\\n    <div class=\\\"col-3\\\">Disable:</div>\\n    <div class=\\\"col-9\\\">\\n        <input type=\\\"checkbox\\\" [(ngModel)]=\\\"model.disabled\\\" />\\n    </div>\\n</div>\\n<div class=\\\"row mb-2\\\">\\n    <div class=\\\"col-3\\\">Indeterminate:</div>\\n    <div class=\\\"col-9\\\">\\n        <input type=\\\"checkbox\\\" #ind [checked]=\\\"model.value === null\\\" (change)=\\\"model.value = ind.checked ? null : (model.value || false)\\\" />\\n    </div>\\n</div>\\n<div class=\\\"row mb-2\\\">\\n    <div class=\\\"col-3\\\">Size:</div>\\n    <div class=\\\"col-9\\\">\\n        <label class=\\\"mr-2\\\">\\n            <input type=\\\"radio\\\" [(ngModel)]=\\\"model.size\\\" value=\\\"sm\\\" />\\n            Small\\n        </label>\\n        <label class=\\\"mr-2\\\">\\n            <input type=\\\"radio\\\" [(ngModel)]=\\\"model.size\\\" value=\\\"\\\" />\\n            Normal\\n        </label>\\n        <label>\\n            <input type=\\\"radio\\\" [(ngModel)]=\\\"model.size\\\" value=\\\"lg\\\" />\\n            Large\\n        </label>\\n    </div>\\n</div>\\n<div class=\\\"row mb-2\\\">\\n    <div class=\\\"col-3\\\">On Color:</div>\\n    <div class=\\\"col-9\\\">\\n        <button *ngFor=\\\"let color of colors\\\" class=\\\"mr-1 mb-1 btn btn-{{color}}\\\" [ngClass]=\\\"{'active': model.onColor === color}\\\" (click)=\\\"setOnColor($event, color)\\\">{{color | titlecase}}</button>\\n    </div>\\n</div>\\n<div class=\\\"row mb-2\\\">\\n    <div class=\\\"col-3\\\">On Text</div>\\n    <div class=\\\"col-9\\\">\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"model.onText\\\" class=\\\"form-control\\\" placeholder=\\\"On Text\\\" />\\n    </div>\\n</div>\\n<div class=\\\"row mb-2\\\">\\n    <div class=\\\"col-3\\\">Off Color:</div>\\n    <div class=\\\"col-9\\\">\\n        <button *ngFor=\\\"let color of colors\\\" class=\\\"mr-1 mb-1 btn btn-{{color}}\\\" [ngClass]=\\\"{'active': model.offColor === color}\\\" (click)=\\\"setOffColor($event, color)\\\">{{color | titlecase}}</button>\\n    </div>\\n</div>\\n<div class=\\\"row mb-2\\\">\\n    <div class=\\\"col-3\\\">Off Text</div>\\n    <div class=\\\"col-9\\\">\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"model.offText\\\" class=\\\"form-control\\\" placeholder=\\\"Off Text\\\" />\\n    </div>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngxd-toggle-kitchen-sink',\n  template: require('./toggle-kitchen-sink.html')\n})\nexport class NgxdToggleKitchenSink {\n  model: any = {\n    onColor: 'primary',\n    offColor: 'secondary',\n    onText: 'On',\n    offText: 'Off',\n    disabled: false,\n    size: '',\n    value: null\n  };\n\n  colors: any = ['primary', 'secondary', 'success', 'danger', 'warning', 'info', 'light', 'dark'];\n\n  setOnColor(event: MouseEvent, color: string) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.model.onColor = color;\n  }\n\n  setOffColor(event: MouseEvent, color: string) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.model.offColor = color;\n  }\n}\n","module.exports = \"<div>\\n    <ngx-toggle\\n        onColor=\\\"{{model.onColor}}\\\"\\n        onText=\\\"{{model.onText}}\\\"\\n        offColor=\\\"{{model.offColor}}\\\"\\n        offText=\\\"{{model.offText}}\\\"\\n        [disabled]=\\\"model.disabled\\\"\\n        [size]=\\\"model.size\\\"\\n        [(value)]=\\\"model.value\\\"\\n    >\\n        <ng-template ngxToggleLabel forLabel=\\\"on\\\"><span class=\\\"fa fa-play\\\"></span>&nbsp;It's On!<br />Like Donkey Kong!</ng-template>\\n        <ng-template ngxToggleLabel forLabel=\\\"off\\\"><span class=\\\"fa fa-stop\\\"></span>&nbsp;And... We're Down.</ng-template>\\n    </ngx-toggle>\\n</div>\\n<pre class=\\\"my-2\\\">{{model | json}}</pre>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngxd-toggle-custom-label',\n  template: require('./toggle-custom-label.html'),\n  styles: [\n      '@import url(\"//maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\");'\n  ]\n})\nexport class NgxdToggleCustomLabel {\n  model: any = {\n    onColor: 'primary',\n    offColor: 'secondary',\n    offText: 'Off',\n    disabled: false,\n    size: '',\n    value: null\n  };\n}\n","module.exports = \"<div>\\n    <ngx-toggle\\n            onColor=\\\"{{model.onColor}}\\\"\\n            onText=\\\"{{model.onText}}\\\"\\n            offColor=\\\"{{model.offColor}}\\\"\\n            offText=\\\"{{model.offText}}\\\"\\n            [disabled]=\\\"model.disabled\\\"\\n            [size]=\\\"model.size\\\"\\n            [(value)]=\\\"model.value\\\"\\n    >\\n        <input type=\\\"checkbox\\\" [disabled]=\\\"model.disabled\\\" [(ngModel)]=\\\"model.value\\\" />\\n    </ngx-toggle>\\n</div>\\n<pre class=\\\"my-2\\\">{{model | json}}</pre>\\n<div class=\\\"row mb-2\\\">\\n    <div class=\\\"col-3\\\">Disable:</div>\\n    <div class=\\\"col-9\\\">\\n        <input type=\\\"checkbox\\\" [(ngModel)]=\\\"model.disabled\\\" />\\n    </div>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngxd-toggle-input',\n  template: require('./toggle-input.html')\n})\nexport class NgxdToggleInput {\n  model: any = {\n    onColor: 'primary',\n    offColor: 'secondary',\n    onText: 'On',\n    offText: 'Off',\n    disabled: false,\n    size: '',\n    value: null\n  };\n}\n","module.exports = \"<div>\\n    <ngx-toggle\\n        onColor=\\\"{{model.onColor}}\\\"\\n        onText=\\\"{{model.onText}}\\\"\\n        offColor=\\\"{{model.offColor}}\\\"\\n        offText=\\\"{{model.offText}}\\\"\\n        [disabled]=\\\"model.disabled\\\"\\n        [size]=\\\"model.size\\\"\\n        [(value)]=\\\"model.value\\\"\\n    >\\n    </ngx-toggle>\\n</div>\\n<pre class=\\\"my-2\\\">{{model | json}}</pre>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'ngxd-toggle-basic',\n  template: require('./toggle-basic.html')\n})\nexport class NgxdToggleBasic {\n  model: any = {\n    onColor: 'primary',\n    offColor: 'secondary',\n    onText: 'On',\n    offText: 'Off',\n    disabled: false,\n    size: '',\n    value: null\n  };\n}\n","import {Routes, RouterModule} from '@angular/router';\nimport {ModuleWithProviders} from '@angular/core';\nimport {DefaultComponent} from './default';\nimport {GettingStarted} from './getting-started';\nimport {\n    NgxdToggle\n} from './components';\nimport {DEFAULT_TAB} from './shared/component-wrapper/component-wrapper.component';\n\nconst DEFAULT_API_PATH = {path: '', pathMatch: 'full', redirectTo: DEFAULT_TAB};\n\nconst componentRoutes = [{\n    path: 'components/toggle',\n    children: [\n      DEFAULT_API_PATH,\n      {path: ':tab', component: NgxdToggle}\n    ]\n  }\n];\n\nconst routes: Routes = [\n  {path: '', pathMatch: 'full', redirectTo: 'home'},\n  {path: 'home', component: DefaultComponent},\n  {path: 'getting-started', component: GettingStarted},\n  {path: 'components', pathMatch: 'full', redirectTo: 'components/toggle' },\n  ...componentRoutes,\n  { path: '**', redirectTo: 'home' }\n];\n\nexport const routing: ModuleWithProviders = RouterModule.forRoot(routes, {useHash: true});\n","module.exports = \"<div class=\\\"container\\\" style=\\\"padding-left: 0; padding-right: 0;\\\">\\n  <header class=\\\"navbar navbar-light navbar-fixed-top navbar-expand-lg\\\">\\n\\n    <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/']\\\" (click)=\\\"navbarCollapsed = true\\\">ngx-toggle</a>\\n\\n    <button class=\\\"navbar-toggler navbar-toggler-right\\\" type=\\\"button\\\" (click)=\\\"navbarCollapsed = !navbarCollapsed\\\"\\n            [attr.aria-expanded]=\\\"!navbarCollapsed\\\" aria-controls=\\\"navbarContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n\\n    <div class=\\\"navbar-collapse\\\" [ngbCollapse]=\\\"navbarCollapsed\\\" id=\\\"navbarContent\\\">\\n      <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['active']\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/getting-started']\\\" (click)=\\\"navbarCollapsed = true\\\">Getting Started</a>\\n        </li>\\n        <li class=\\\"nav-item\\\" [routerLinkActive]=\\\"['active']\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/components']\\\" (click)=\\\"navbarCollapsed = true\\\">Components</a>\\n        </li>\\n        <li class=\\\"nav-item d-lg-none\\\" *ngFor=\\\"let component of components\\\" [routerLinkActive]=\\\"['active']\\\">\\n          <a class=\\\"nav-link\\\" [routerLink]=\\\"['/components', component.route.toLowerCase()]\\\" (click)=\\\"navbarCollapsed = true\\\">{{ component.name }}</a>\\n        </li>\\n      </ul>\\n\\n      <span class=\\\"github-buttons d-none d-lg-inline\\\">\\n        <a class=\\\"github-button\\\"\\n           href=\\\"https://github.com/ngx-toggle/ngx-toggle\\\"\\n           target=\\\"_blank\\\"\\n           data-size=\\\"large\\\"\\n           data-show-count=\\\"true\\\"\\n           data-count-aria-label=\\\"# stargazers on GitHub\\\"\\n           aria-label=\\\"Star ngx-toggle/ngx-toggle on GitHub\\\">Star</a>\\n        <a href=\\\"https://twitter.com/intent/tweet?button_hashtag=ngxtoggle\\\"\\n           class=\\\"twitter-hashtag-button\\\"\\n           data-size=\\\"large\\\"\\n           data-text=\\\"I&#39;m checking out ngx-toggle\\\"\\n           data-url=\\\"https://ngx-toggle.github.io\\\"\\n           data-show-count=\\\"true\\\">Tweet #ngxtoggle</a>\\n      </span>\\n    </div>\\n  </header>\\n</div>\\n\\n<div>\\n  <router-outlet></router-outlet>\\n</div>\\n\\n<footer class=\\\"bd-footer text-muted\\\">\\n  <div class=\\\"container\\\">\\n    <p>Designed and built by the <a href=\\\"https://github.com/ngx-toggle/ngx-toggle/contributors\\\" target=\\\"_blank\\\">ngx-toggle\\n      team</a>.</p>\\n    <p>Code licensed under <a href=\\\"https://raw.githubusercontent.com/ngx-toggle/ngx-toggle/master/LICENSE\\\"\\n                              target=\\\"_blank\\\">MIT license conditions.</a></p>\\n    <p>\\n      Documentation licensed under <a href=\\\"https://creativecommons.org/licenses/by/3.0/\\\" target=\\\"_blank\\\">CC BY 3.0</a>.\\n      Design and content of the documentation site heavily inspired by the <a href=\\\"https://ng-bootstrap.github.io/\\\"\\n                                                                              target=\\\"_blank\\\">Ng-Bootstrap team and design</a>.</p>\\n  </div>\\n</footer>\\n\"","module.exports = \"<div class=\\\"bd-sidebar\\\">\\n  <nav>\\n    <div class=\\\"bd-toc-item\\\">\\n      <a class=\\\"bd-toc-link\\\" [routerLink]=\\\"['/components']\\\">\\n        <h4>Components</h4>\\n      </a>\\n      <ul class=\\\"nav flex-column\\\">\\n          <li *ngFor=\\\"let component of components\\\"\\n              [class.active]=\\\"isActive(['/components', component.route.toLowerCase(), activeTab])\\\">\\n          <a [routerLink]=\\\"['/components', component.route.toLowerCase(), activeTab]\\\">{{ component.name }}</a>\\n        </li>\\n      </ul>\\n    </div>\\n  </nav>\\n</div>\\n\"","module.exports = \"<div class=\\\"jumbotron\\\">\\n  <div class=\\\"container\\\">\\n    <h1>{{ title }}</h1>\\n  </div>\\n</div>\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12 col-lg-9\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <div class=\\\"col-12 col-lg-3 hidden-md-down\\\">\\n      <ngbd-side-nav></ngbd-side-nav>\\n    </div>\\n  </div>\\n</div>\\n\"","import {Component, Input} from '@angular/core';\n\n@Component({\n  selector: 'ngtsd-page-wrapper',\n  template: require('./page-wrapper.component.html')\n})\nexport class PageWrapper {\n  @Input()\n  public title: string;\n}\n","module.exports = \"<div class=\\\"jumbotron\\\">\\n  <div class=\\\"container\\\">\\n    <h1>{{ component }}</h1>\\n  </div>\\n</div>\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-12 col-lg-9\\\">\\n      <ngb-tabset\\n        class=\\\"root-nav\\\"\\n        (tabChange)=\\\"tabChange($event)\\\"\\n        [activeId]=\\\"activeTab\\\"\\n      >\\n        <ngb-tab title=\\\"Examples\\\" id=\\\"examples\\\">\\n          <ng-template ngbTabContent>\\n            <ng-content select=\\\"ngbd-example-box\\\"></ng-content>\\n            <div class=\\\"examples-legend\\\">\\n              <strong>Legend</strong>\\n              <p>\\n                <ng-container *ngFor=\\\"let type of fileTypes; last as last\\\">\\n                  <small class=\\\"badge {{type[2]}}\\\">{{type[0]}}</small> {{type[1]}}\\n                  <ng-container *ngIf=\\\"!last\\\">&nbsp;</ng-container>\\n                </ng-container>\\n              </p>\\n            </div>\\n          </ng-template>\\n        </ngb-tab>\\n        <ngb-tab title=\\\"API\\\" id=\\\"api\\\">\\n          <ng-template ngbTabContent>\\n            <ng-content select=\\\"ngbd-api-docs\\\"></ng-content>\\n            <ng-content select=\\\"ngbd-api-docs-class\\\"></ng-content>\\n            <ng-content select=\\\"ngbd-api-docs-config\\\"></ng-content>\\n          </ng-template>\\n        </ngb-tab>\\n      </ngb-tabset>\\n    </div>\\n    <div class=\\\"col-12 col-lg-3 d-none d-lg-block\\\">\\n      <ngbd-side-nav [activeTab]=\\\"activeTab\\\"></ngbd-side-nav>\\n    </div>\\n  </div>\\n</div>\\n\"","import {Router, NavigationEnd} from '@angular/router';\nimport {Component, OnInit} from '@angular/core';\nimport {Analytics} from './shared/analytics/analytics';\nimport {componentsList} from './shared';\n\nimport '../style/app.scss';\n\n@Component({\n  selector: 'ngtsd-app',\n  template: require('./app.component.html')\n})\nexport class AppComponent implements OnInit {\n  navbarCollapsed = true;\n\n  components = componentsList;\n\n  constructor(private _analytics: Analytics, router: Router) {\n    router.events.subscribe(event => {\n      if (event instanceof NavigationEnd) {\n        const { fragment } = router.parseUrl(router.url);\n        if (fragment) {\n          const element = document.querySelector(`#${fragment}`);\n          if (element) {\n            element.scrollIntoView();\n          }\n        }\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    this._analytics.trackPageViews();\n  }\n}\n","module.exports = \"<ngtsd-page-wrapper title=\\\"Getting Started\\\">\\n  <h3>\\n    Dependencies\\n  </h3>\\n  <p>\\n    This repository contains a Angular v2+ Bootstrap-styled Toggle that can be used as a standalone toggle or can convert checkboxes into UI toggles.\\n    As a result no dependency on jQuery or Bootstrap's JavaScript is required. The only required dependencies are:\\n  </p>\\n  <ul>\\n    <li>\\n      <a href=\\\"https://angular.io\\\" target=\\\"_blank\\\">Angular</a> (<em>requires</em> Angular version 5 or higher, tested with 5.0.2)\\n    </li>\\n    <li>\\n      <a href=\\\"https://www.getbootstrap.com\\\" target=\\\"_blank\\\">Bootstrap CSS</a> (tested with 4.0.0-beta.2)\\n    </li>\\n  </ul>\\n\\n  <h3>\\n    Supported browsers\\n  </h3>\\n  <p>We strive to support the same browsers and versions as supported by both Bootstrap 4 and Angular, whichever is more restrictive. Check browser support notes for\\n    <a href=\\\"https://angular.io/docs/ts/latest/guide/browser-support.html\\\" target=\\\"_blank\\\">Angular</a> and\\n    <a href=\\\"https://getbootstrap.com/docs/4.0/getting-started/browsers-devices/\\\" target=\\\"_blank\\\">Bootstrap</a>.\\n  </p>\\n  <p>Our code is automatically tested on all the supported browsers.</p>\\n\\n  <h3>\\n    Installation\\n  </h3>\\n  <p>After installing the above dependencies, install <code>ngx-toggle</code> via: <br><code>npm install --save ngx-toggle</code></p>\\n\\n  <p>Once installed you need to import our main module.</p>\\n  <pre>import &#123;NgxToggleModule} from 'ngx-toggle';</pre>\\n  <p>\\n    The only remaining part is to list the imported module in your application modules that make use of the components in this library:\\n  </p>\\n  <pre>import &#123;NgxToggleModule} from 'ngx-toggle';\\n\\n@NgModule(&#123;\\n  declarations: [AppComponent, ...],\\n  imports: [NgxToggleModule, ...],\\n  bootstrap: [AppComponent]\\n})\\nexport class AppModule &#123;\\n}</pre>\\n\\n  <h4>\\n    SystemJS\\n  </h4>\\n  <p>\\n    If you are using SystemJS, you should also adjust your configuration to point to the UMD bundle.\\n  </p>\\n  <p>\\n    In your systemjs config file, <code>map</code> needs to tell the System loader where to look for <code>ngx-toggle</code>:\\n  </p>\\n  <pre><code>map: &#123;\\n  'ngx-toggle': 'node_modules/ngx-toggle/ngx-toggle/bundles/ngx-toggle.js',\\n}</code></pre>\\n  <h3>\\n    Getting Help\\n  </h3>\\n  <p>\\n    Please, do not open issues for the general support questions as we want to keep GitHub issues for bug reports\\n    and feature requests. You've got much better chances of getting your question answered on\\n    <a href=\\\"https://stackoverflow.com/questions/tagged/ngx-toggle\\\" target=\\\"_blank\\\">StackOverflow</a> where the community at large are looking\\n    at questions tagged with <code>ngx-toggle</code>.\\n  </p>\\n  <p>\\n    StackOverflow is a much better place to ask questions since:\\n  </p>\\n  <ul>\\n    <li>there are hundreds of people willing to help on StackOverflow,</li>\\n    <li>questions and answers stay available for public viewing so your question / answer might help someone else, and</li>\\n    <li>the SO voting system assures that the best answers are prominently visible.</li>\\n  </ul>\\n  <p>\\n    To save your and our time we will be systematically closing all the issues that are requests for general support and redirecting people to StackOverflow.\\n  </p>\\n</ngtsd-page-wrapper>\\n\"","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'ngbd-getting-started',\n  template: require('./getting-started.component.html')\n})\nexport class GettingStarted {}\n","module.exports = \"<main class=\\\"bd-masthead\\\">\\n  <div class=\\\"container\\\">\\n    <p class=\\\"lead d-none d-md-block\\\">\\n      Bootstrap-style Toggle Switch for Angular\\n    </p>\\n    <p>Currently at v{{version}}</p>\\n    <p class=\\\"lead\\\">\\n      <a\\n        class=\\\"btn btn-outline-primary\\\"\\n        [routerLink]=\\\"['/components']\\\">Demo</a>\\n      <a\\n        class=\\\"btn btn-outline-primary\\\"\\n        [routerLink]=\\\"['/getting-started']\\\">Installation</a>\\n    </p>\\n  </div>\\n</main>\\n\\n<section class=\\\"container\\\">\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-sm-2\\\">\\n      <img src=\\\"/img/cpu.svg\\\" class=\\\"img-fluid d-none d-sm-block\\\" alt=\\\"Native widgets icon (computer chip)\\\">\\n    </div>\\n    <div class=\\\"col-sm-4\\\">\\n      <h4>Native</h4>\\n      <p class=\\\"text-muted\\\">\\n        Angular - specific widgets built from ground and using Bootstrap 4 CSS. APIs that makes sense in the Angular ecosystem.\\n        No dependencies on 3rd party JavaScript.\\n      </p>\\n    </div>\\n\\n    <div class=\\\"col-sm-2\\\">\\n      <img src=\\\"/img/test.svg\\\" class=\\\"img-fluid d-none d-sm-block\\\" alt=\\\"Quality icon\\\">\\n    </div>\\n    <div class=\\\"col-sm-4\\\">\\n      <h4>Quality</h4>\\n      <p class=\\\"text-muted\\\">\\n        All code is tested (almost 100% test coverage) and all changes reviewed. We are not cutting corners.\\n      </p>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row mt-md-5\\\">\\n    <div class=\\\"col-sm-2\\\">\\n      <img src=\\\"/img/escalator.svg\\\" class=\\\"img-fluid d-none d-sm-block\\\" alt=\\\"Accessible icon (escalator)\\\">\\n    </div>\\n    <div class=\\\"col-sm-4\\\">\\n      <h4>Accessible</h4>\\n      <p class=\\\"text-muted\\\">\\n        All the widgets are accessible. We use proper HTML elements and required aria attributes.\\n        Keyboard navigation and focus management works as expected.\\n      </p>\\n    </div>\\n\\n     <div class=\\\"col-sm-2\\\">\\n      <img src=\\\"/img/world.svg\\\" class=\\\"img-fluid d-none d-sm-block\\\" alt=\\\"Community icon\\\">\\n    </div>\\n    <div class=\\\"col-sm-4\\\">\\n      <h4>Community</h4>\\n      <p class=\\\"text-muted\\\">\\n        We give back to the community by contributing to projects we build upon (Angular, Bootstrap, Ng-Bootstrap). We support people on <a href=\\\"http://stackoverflow.com/questions/tagged/ngx-toggle\\\">Stack Overflow</a>.\\n      </p>\\n    </div>\\n  </div>\\n\\n</section>\\n\"","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'ngtsd-default',\n  template: require('./default.component.html')\n})\nexport class DefaultComponent {\n  public version: string = process.env.version;\n}\n","import {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\n\nimport {DefaultComponent} from './default';\nimport {GettingStarted} from './getting-started';\nimport {AppComponent} from './app.component';\nimport {routing} from './app.routing';\nimport {NgxdDemoModule} from './components';\nimport {NgbdSharedModule} from './shared';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DefaultComponent,\n    GettingStarted\n  ],\n  imports: [\n    BrowserModule,\n    routing,\n    NgbModule.forRoot(),\n    NgxdDemoModule,\n    NgbdSharedModule\n  ],\n  bootstrap: [AppComponent]\n})\nexport class NgxdModule {\n}\n","import {enableProdMode} from '@angular/core';\nimport {platformBrowserDynamic} from '@angular/platform-browser-dynamic';\n\nimport {NgxdModule} from './app/app.module';\n\n// depending on the env mode, enable prod mode or add debugging modules\nif (process.env.ENV === 'build') {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(NgxdModule);\n","import {Injectable} from '@angular/core';\nimport {Router, NavigationEnd} from '@angular/router';\nimport {Location} from '@angular/common';\n\nimport {filter} from 'rxjs/operator/filter';\n\ndeclare const ga: any;\n\n/**\n * Simple Google Analytics service. Note that all its methods don't do anything unless the app\n * is deployed on ngx-toggle.github.io. This avoids sending events and page views during development.\n */\n@Injectable()\nexport class Analytics {\n  private _enabled: boolean;\n\n  constructor(private _location: Location, private _router: Router) {\n    this._enabled = window.location.href.indexOf('ngx-toggle.github.io') >= 0;\n  }\n\n  /**\n   * Intended to be called only once. Subscribes to router events and sends a page view\n   * after each ended navigation event.\n   */\n  trackPageViews() {\n    if (this._enabled) {\n      filter.call(this._router.events, (event) => event instanceof NavigationEnd)\n        .subscribe(() => {\n          ga('send', {hitType: 'pageview', page: this._location.path()});\n        });\n    }\n  }\n\n  /**\n   * Sends an event.\n   */\n  trackEvent(action: string, category: string) {\n    if (this._enabled) {\n      ga('send', {hitType: 'event', eventCategory: category, eventAction: action});\n    }\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule} from '@angular/router';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\n\nimport {ComponentWrapper} from './component-wrapper/component-wrapper.component';\nimport {PageWrapper} from './page-wrapper/page-wrapper.component';\nimport {SideNavComponent} from './side-nav/side-nav.component';\nimport {Analytics} from './analytics/analytics';\n\nexport {componentsList} from './side-nav/side-nav.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, NgbModule],\n  exports: [\n    CommonModule,\n    RouterModule,\n    ComponentWrapper,\n    PageWrapper,\n    SideNavComponent,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  declarations: [\n    ComponentWrapper,\n    PageWrapper,\n    SideNavComponent,\n  ],\n  providers: [Analytics]\n})\nexport class NgbdSharedModule {\n}\n","const API_DOCS = {\n  \"NgxToggleLabel\": {\n    \"fileName\": \"src/toggle.ts\",\n    \"className\": \"NgxToggleLabel\",\n    \"description\": \"The NgxToggleLabel directive allows you to customize the label for the \\\"On\\\" and \\\"Off\\\" states,\\nallowing for more robust and complex displays.\\nThis directive must be used in conjunction with a ng-template.\",\n    \"type\": \"Directive\",\n    \"selector\": \"ng-template[ngxToggleLabel]\",\n    \"inputs\": [\n      {\n        \"name\": \"forLabel\",\n        \"type\": \"\\\"on\\\" | \\\"off\\\"\",\n        \"description\": \"Determines which state the label will be used.\"\n      }\n    ],\n    \"outputs\": [],\n    \"properties\": [\n      {\n        \"name\": \"element\",\n        \"type\": \"ElementRef\",\n        \"description\": \"\"\n      }\n    ],\n    \"methods\": []\n  },\n  \"NgxToggle\": {\n    \"fileName\": \"src/toggle.ts\",\n    \"className\": \"NgxToggle\",\n    \"description\": \"The NgxToggle directive allows for standalone or checkbox-enabled switch toggling via a UI element.\\nThe toggle is styled using Bootstrap v4+ classes.\",\n    \"type\": \"Component\",\n    \"selector\": \"ngx-toggle\",\n    \"inputs\": [\n      {\n        \"name\": \"disabled\",\n        \"defaultValue\": \"false\",\n        \"type\": \"boolean\",\n        \"description\": \"Whether the toggle is disabled or not\"\n      },\n      {\n        \"name\": \"offColor\",\n        \"defaultValue\": \"secondary\",\n        \"type\": \"string\",\n        \"description\": \"Bootstrap color scheme when toggled in the \\\"Off\\\" position (i.e. \\\"primary\\\" translates to \\\"btn-primary\\\")\"\n      },\n      {\n        \"name\": \"offText\",\n        \"defaultValue\": \"Off\",\n        \"type\": \"string\",\n        \"description\": \"Display text when toggled in the \\\"Off\\\" position\"\n      },\n      {\n        \"name\": \"onColor\",\n        \"defaultValue\": \"primary\",\n        \"type\": \"string\",\n        \"description\": \"Bootstrap color scheme when toggled in the \\\"On\\\" position (i.e. \\\"primary\\\" translates to \\\"btn-primary\\\")\"\n      },\n      {\n        \"name\": \"onText\",\n        \"defaultValue\": \"On\",\n        \"type\": \"string\",\n        \"description\": \"Display text when toggled in the \\\"On\\\" position\"\n      },\n      {\n        \"name\": \"size\",\n        \"type\": \"\\\"\\\" | \\\"sm\\\" | \\\"lg\\\"\",\n        \"description\": \"Button size to display the toggle\"\n      },\n      {\n        \"name\": \"value\",\n        \"type\": \"boolean\",\n        \"description\": \"\"\n      }\n    ],\n    \"outputs\": [\n      {\n        \"name\": \"valueChange\",\n        \"description\": \"An event fired when the user causes a change.\\nThe payload of the event is the currently selected value.\"\n      }\n    ],\n    \"properties\": [\n      {\n        \"name\": \"activeClass\",\n        \"type\": \"string\",\n        \"description\": \"\"\n      },\n      {\n        \"name\": \"animate\",\n        \"type\": \"boolean\",\n        \"description\": \"\"\n      },\n      {\n        \"name\": \"btnClasses\",\n        \"type\": \"any\",\n        \"description\": \"\"\n      },\n      {\n        \"name\": \"containerElement\",\n        \"type\": \"ElementRef\",\n        \"description\": \"\"\n      },\n      {\n        \"name\": \"handleClass\",\n        \"type\": \"any\",\n        \"description\": \"\"\n      },\n      {\n        \"name\": \"handleElement\",\n        \"type\": \"ElementRef\",\n        \"description\": \"\"\n      },\n      {\n        \"name\": \"handleWidth\",\n        \"defaultValue\": \"0\",\n        \"type\": \"number\",\n        \"description\": \"\"\n      },\n      {\n        \"name\": \"inactiveClass\",\n        \"type\": \"string\",\n        \"description\": \"\"\n      },\n      {\n        \"name\": \"indeterminate\",\n        \"type\": \"boolean\",\n        \"description\": \"\"\n      },\n      {\n        \"name\": \"innerState\",\n        \"type\": \"boolean\",\n        \"description\": \"\"\n      },\n      {\n        \"name\": \"labelElements\",\n        \"type\": \"QueryList<NgxToggleLabel>\",\n        \"description\": \"\"\n      },\n      {\n        \"name\": \"marginLeft\",\n        \"type\": \"string\",\n        \"description\": \"\"\n      },\n      {\n        \"name\": \"offClasses\",\n        \"type\": \"any\",\n        \"description\": \"\"\n      },\n      {\n        \"name\": \"offElement\",\n        \"type\": \"ElementRef\",\n        \"description\": \"\"\n      },\n      {\n        \"name\": \"offLabel\",\n        \"type\": \"NgxToggleLabel\",\n        \"description\": \"\"\n      },\n      {\n        \"name\": \"onClasses\",\n        \"type\": \"any\",\n        \"description\": \"\"\n      },\n      {\n        \"name\": \"onElement\",\n        \"type\": \"ElementRef\",\n        \"description\": \"\"\n      },\n      {\n        \"name\": \"onLabel\",\n        \"type\": \"NgxToggleLabel\",\n        \"description\": \"\"\n      },\n      {\n        \"name\": \"value\",\n        \"type\": \"boolean\",\n        \"description\": \"\"\n      },\n      {\n        \"name\": \"width\",\n        \"defaultValue\": \"0\",\n        \"type\": \"number\",\n        \"description\": \"\"\n      }\n    ],\n    \"methods\": []\n  }\n};\n\nexport default API_DOCS;"],"sourceRoot":""}